{"version":3,"file":"ui.uploader.bundle.js","sources":["../src/enums/file-status.js","../src/enums/file-origin.js","../src/backend/abstract-upload-controller.js","../src/backend/abstract-load-controller.js","../src/helpers/create-unique-id.js","../src/helpers/get-extension-from-type.js","../src/helpers/create-file-from-blob.js","../src/helpers/is-data-uri.js","../src/helpers/create-blob-from-data-uri.js","../src/helpers/get-file-extension.js","../src/helpers/is-resizable-image.js","../src/helpers/format-file-size.js","../src/uploader-file.js","../src/uploader-error.js","../src/backend/chunk.js","../src/backend/upload-controller.js","../src/backend/server-load-multiple.js","../src/backend/server-load-controller.js","../src/backend/client-load-controller.js","../src/backend/server.js","../src/filters/filter.js","../src/filters/file-size-filter.js","../src/helpers/is-valid-file-type.js","../src/filters/file-type-filter.js","../src/helpers/get-array-buffer.js","../src/helpers/image-size/convert-string-to-buffer.js","../src/helpers/image-size/compare-buffers.js","../src/helpers/image-size/types/gif.js","../src/helpers/image-size/types/png.js","../src/helpers/image-size/types/bmp.js","../src/helpers/image-size/types/jpeg.js","../src/helpers/image-size/types/webp.js","../src/helpers/image-size/get-image-size.js","../src/filters/image-size-filter.js","../src/helpers/create-worker.js","../src/helpers/bitmap-worker.js","../src/helpers/load-image.js","../src/helpers/create-image-preview.js","../src/helpers/get-filename-without-extension.js","../src/helpers/rename-file-to-match-mime-type.js","../src/helpers/convert-canvas-to-blob.js","../src/helpers/resize-image.js","../src/filters/image-preview-filter.js","../src/filters/transform-image-filter.js","../src/enums/uploader-status.js","../src/enums/filter-type.js","../src/helpers/get-files-from-data-transfer.js","../src/helpers/can-append-file-to-form.js","../src/helpers/assign-file-to-input.js","../src/uploader.js","../src/adapters/vue-adapter.js","../src/adapters/vue-uploader-widget.js","../src/adapters/vue-uploader-component.js","../src/helpers/is-image.js"],"sourcesContent":["export const FileStatus = {\n\tINIT: 'init',\n\tADDED: 'added',\n\tLOADING: 'loading',\n\tPENDING: 'pending',\n\tUPLOADING: 'uploading',\n\tABORTED: 'aborted',\n\tCOMPLETE: 'complete',\n\tLOAD_FAILED: 'load-failed',\n\tUPLOAD_FAILED: 'upload-failed',\n};","export const FileOrigin = {\n\tCLIENT: 'client',\n\tSERVER: 'server',\n};","import { EventEmitter } from 'main.core.events';\nimport type Server from './server';\n\nexport default class AbstractUploadController extends EventEmitter\n{\n\tconstructor(server: Server)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.UploadController');\n\n\t\tthis.server = server;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.server;\n\t}\n\n\tupload(file: File): void\n\t{\n\t\tthrow new Error('You must implement upload() method.');\n\t}\n\n\tabort(): void\n\t{\n\t\tthrow new Error('You must implement abort() method.');\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\n\nexport default class AbstractLoadController extends EventEmitter\n{\n\tconstructor(server: Server)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.LoadController');\n\n\t\tthis.server = server;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.server;\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tthrow new Error('You must implement load() method.');\n\t}\n\n\tabort(): void\n\t{\n\t\tthrow new Error('You must implement abort() method.');\n\t}\n}\n","const crypto = window.crypto || window.msCrypto;\n\nconst createUniqueId = (): string => {\n\treturn (`${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`).replace(/[018]/g, c =>\n\t\t(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n\t);\n};\n\nexport default createUniqueId;","import { Type } from 'main.core';\n\nconst getExtensionFromType = (type) => {\n\tif (!Type.isStringFilled(type))\n\t{\n\t\treturn '';\n\t}\n\n\tconst subtype = type.split('/').pop();\n\n\tif (/javascript/.test(subtype))\n\t{\n\t\treturn 'js';\n\t}\n\n\tif (/plain/.test(subtype))\n\t{\n\t\treturn 'txt';\n\t}\n\n\tif (/svg/.test(subtype))\n\t{\n\t\treturn 'svg';\n\t}\n\n\tif (/[a-z]+/.test(subtype))\n\t{\n\t\treturn subtype;\n\t}\n\n\treturn '';\n};\n\nexport default getExtensionFromType;","import { Type } from 'main.core';\nimport getExtensionFromType from './get-extension-from-type';\n\nlet counter = 0;\nconst createFileFromBlob = (blob: Blob, fileName: string): File => {\n\n\tif (!Type.isStringFilled(fileName))\n\t{\n\t\tconst date = new Date();\n\t\tfileName = `File ${date.getFullYear()}-${date.getMonth()}-${date.getDate()}-${++counter}`;\n\n\t\tconst extension = getExtensionFromType(blob.type);\n\t\tif (extension)\n\t\t{\n\t\t\tfileName += `.${extension}`;\n\t\t}\n\t}\n\n\ttry\n\t{\n\t\treturn new File(\n\t\t\t[blob],\n\t\t\tfileName,\n\t\t\t{\n\t\t\t\tlastModified: Date.now(),\n\t\t\t\tlastModifiedDate: new Date(),\n\t\t\t\ttype: blob.type\n\t\t\t}\n\t\t);\n\t}\n\tcatch (exception)\n\t{\n\t\tconst file = blob.slice(0, blob.size, blob.type);\n\t\tfile.name = fileName;\n\t\tfile.lastModified = Date.now();\n\t\tfile.lastModifiedDate = new Date();\n\n\t\treturn file;\n\t}\n};\n\nexport default createFileFromBlob;","const regexp = /^data:((?:\\w+\\/(?:(?!;).)+)?)((?:;[\\w\\W]*?[^;])*),(.+)$/;\n\nconst isDataUri = (str: string): boolean => {\n\treturn typeof(str) === 'string' ? str.match(regexp) : false;\n};\n\nexport default isDataUri;","const createBlobFromDataUri = (dataURI: string): Blob => {\n\tconst byteString = atob(dataURI.split(',')[1]);\n\tconst mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n\tconst buffer = new ArrayBuffer(byteString.length);\n\tconst view = new Uint8Array(buffer);\n\n\tfor (let i = 0; i < byteString.length; i++)\n\t{\n\t\tview[i] = byteString.charCodeAt(i);\n\t}\n\n\treturn new Blob([buffer], { type: mimeString });\n};\n\nexport default createBlobFromDataUri;","import { Type } from 'main.core';\n\nconst getFileExtension = (filename: string) => {\n\tconst position = Type.isStringFilled(filename) ? filename.lastIndexOf('.') : -1;\n\n\treturn position > 0 ? filename.substring(position + 1) : '';\n};\n\nexport default getFileExtension;\n\n\n","import { Type } from 'main.core';\nimport getFileExtension from './get-file-extension';\n\nconst imageExtensions = ['jpg', 'bmp', 'jpeg', 'jpe', 'gif', 'png', 'webp'];\n\nconst isResizableImage = (file: File | string, mimeType: string = null) => {\n\tconst filename = Type.isFile(file) ? file.name : file;\n\tconst type = Type.isFile(file) ? file.type : mimeType;\n\tconst extension = getFileExtension(filename).toLowerCase();\n\n\tif (imageExtensions.includes(extension))\n\t{\n\t\tif (type === null || /^image\\/[a-z0-9.-]+$/i.test(type))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nexport default isResizableImage;\n","import { Loc, Type } from 'main.core';\n\nconst formatFileSize = (size: number, base: number = 1024): string => {\n\tlet i = 0;\n\tconst units = getUnits();\n\twhile (size >= base && units[i + 1])\n\t{\n\t\tsize /= base;\n\t\ti++;\n\t}\n\n\treturn (Type.isInteger(size) ? size : size.toFixed(1)) + units[i];\n};\n\nlet fileSizeUnits = null;\nconst getUnits = () => {\n\tif (fileSizeUnits !== null)\n\t{\n\t\treturn fileSizeUnits;\n\t}\n\n\tconst units = Loc.getMessage('UPLOADER_FILE_SIZE_POSTFIXES').split(/[|]/);\n\tfileSizeUnits = Type.isArrayFilled(units) ? units : ['B', 'kB', 'MB', 'GB', 'TB'];\n\n\treturn fileSizeUnits;\n};\n\nexport default formatFileSize;","import { Type } from 'main.core';\nimport { BaseEvent, EventEmitter } from 'main.core.events';\n\nimport { FileStatus } from './enums/file-status';\nimport { FileOrigin } from './enums/file-origin';\n\nimport type { FileInfo } from './types/file-info';\nimport type { UploaderFileOptions } from './types/uploader-file-options';\nimport type UploaderError from './uploader-error';\n\nimport AbstractUploadController from './backend/abstract-upload-controller';\nimport AbstractLoadController from './backend/abstract-load-controller';\n\nimport createUniqueId from './helpers/create-unique-id';\nimport createFileFromBlob from './helpers/create-file-from-blob';\nimport isDataUri from './helpers/is-data-uri';\nimport createBlobFromDataUri from './helpers/create-blob-from-data-uri';\nimport isResizableImage from './helpers/is-resizable-image';\nimport formatFileSize from './helpers/format-file-size';\n\nexport default class UploaderFile extends EventEmitter\n{\n\tid: string = null;\n\tsource: File | Blob | string | number;\n\tfile: File = null;\n\tserverId: number | string = null;\n\n\tname: string = '';\n\toriginalName: string = null;\n\tsize: number = 0;\n\ttype: string = '';\n\twidth: ?number = null;\n\theight: ?number = null;\n\n\tclientPreview: ?File = null;\n\tclientPreviewUrl: ?string = null;\n\tclientPreviewWidth: ?number = null;\n\tclientPreviewHeight: ?number = null;\n\n\tserverPreviewUrl: ?string = null;\n\tserverPreviewWidth: ?number = null;\n\tserverPreviewHeight: ?number = null;\n\n\tdownloadUrl: ?string = null;\n\tremoveUrl: ?string = null;\n\n\tstatus: FileStatus = FileStatus.INIT;\n\torigin: FileOrigin = FileOrigin.CLIENT;\n\terrors: UploaderError[] = [];\n\tprogress: number = 0;\n\n\tuploadController: AbstractUploadController = null;\n\tloadController: AbstractLoadController = null;\n\n\tconstructor(source: File | Blob | string | number, fileOptions: UploaderFileOptions = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.File');\n\n\t\tconst options = Type.isPlainObject(fileOptions) ? fileOptions : {};\n\n\t\tif (Type.isFile(source))\n\t\t{\n\t\t\tthis.file = source;\n\t\t}\n\t\telse if (Type.isBlob(source))\n\t\t{\n\t\t\tthis.file = createFileFromBlob(source, options.name || source.name);\n\t\t}\n\t\telse if (isDataUri(source))\n\t\t{\n\t\t\tconst blob = createBlobFromDataUri(source);\n\t\t\tthis.file = createFileFromBlob(blob, options.name);\n\t\t}\n\t\telse if (Type.isNumber(source) || Type.isStringFilled(source))\n\t\t{\n\t\t\tthis.origin = FileOrigin.SERVER;\n\t\t\tthis.serverId = source;\n\t\t\tif (Type.isPlainObject(options))\n\t\t\t{\n\t\t\t\tthis.setFile(options);\n\t\t\t}\n\t\t}\n\n\t\tthis.id = Type.isStringFilled(options.id) ? options.id : createUniqueId();\n\t\tthis.subscribeFromOptions(options.events);\n\n\t\t//this.fireStateChangeEvent = Runtime.debounce(this.fireStateChangeEvent, 0, this);\n\t}\n\n\tload(): void\n\t{\n\t\tif (!this.canLoad())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setStatus(FileStatus.LOADING);\n\t\tthis.emit('onLoadStart');\n\n\t\tthis.loadController.load(this);\n\t}\n\n\tupload(): void\n\t{\n\t\tif (!this.canUpload())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tlet event = new BaseEvent({ data: { file: this } });\n\t\tthis.emit('onBeforeUpload', event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setStatus(FileStatus.UPLOADING);\n\n\t\tevent = new BaseEvent({ data: { file: this.getFile() } });\n\t\tthis.emitAsync('onPrepareFileAsync', event)\n\t\t\t.then((result) => {\n\t\t\t\tconst file = Type.isArrayFilled(result) && Type.isFile(result[0]) ? result[0] : this.getFile();\n\t\t\t\tthis.emit('onUploadStart');\n\n\t\t\t\tif (this.uploadController)\n\t\t\t\t{\n\t\t\t\t\tthis.uploadController.upload(file);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error);\n\t\t\t})\n\t\t;\n\t}\n\n\t// stop(): void\n\t// {\n\t// \tif (this.isUploading())\n\t// \t{\n\t// \t\tthis.abort();\n\t// \t\tthis.setStatus(FileStatus.PENDING);\n\t// \t}\n\t// }\n\t//\n\t// resume(): void\n\t// {\n\t//\n\t// }\n\t// retry(): void\n\t// {\n\t// \t// TODO\n\t// }\n\n\tabort(): void\n\t{\n\t\tif (this.uploadController)\n\t\t{\n\t\t\tthis.uploadController.abort();\n\t\t}\n\n\t\tthis.setStatus(FileStatus.ABORTED);\n\t\tthis.emit('onAbort');\n\t}\n\n\tabortLoad(): void\n\t{\n\t\tif (this.loadController)\n\t\t{\n\t\t\tthis.loadController.abort();\n\t\t}\n\n\t\tthis.setStatus(FileStatus.ABORTED);\n\t\tthis.emit('onAbort');\n\t}\n\n\tcancel(): void\n\t{\n\t\tthis.abort();\n\t\tthis.emit('onCancel');\n\t}\n\n\tsetUploadController(controller: AbstractUploadController): void\n\t{\n\t\tthis.uploadController = controller;\n\t}\n\n\tsetLoadController(controller: AbstractLoadController): void\n\t{\n\t\tthis.loadController = controller;\n\t}\n\n\tisReadyToUpload(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.PENDING;\n\t}\n\n\tisUploadable(): boolean\n\t{\n\t\treturn this.uploadController !== null;\n\t}\n\n\tisLoadable(): boolean\n\t{\n\t\treturn this.loadController !== null;\n\t}\n\n\tcanUpload(): boolean\n\t{\n\t\treturn this.isReadyToUpload() && this.isUploadable();\n\t}\n\n\tcanLoad(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.ADDED && this.isLoadable();\n\t}\n\n\tisUploading(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.UPLOADING;\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOADING;\n\t}\n\n\tisComplete(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.COMPLETE;\n\t}\n\n\tisFailed(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOAD_FAILED || this.getStatus() === FileStatus.UPLOAD_FAILED;\n\t}\n\n\tgetFile(): ?File\n\t{\n\t\treturn this.file;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetFile(file: File | FileInfo): void\n\t{\n\t\tif (Type.isFile(file))\n\t\t{\n\t\t\tthis.file = file;\n\t\t}\n\t\telse if (Type.isPlainObject(file))\n\t\t{\n\t\t\tthis.setName(file.name);\n\t\t\tthis.setOriginalName(file.originalName);\n\t\t\tthis.setType(file.type);\n\t\t\tthis.setSize(file.size);\n\n\t\t\tthis.setServerId(file.serverId);\n\t\t\tthis.setWidth(file.width);\n\t\t\tthis.setHeight(file.height);\n\n\t\t\tthis.setClientPreview(file.clientPreview, file.clientPreviewWidth, file.clientPreviewHeight);\n\t\t\tthis.setServerPreview(file.serverPreviewUrl, file.serverPreviewWidth, file.serverPreviewHeight);\n\n\t\t\tthis.setDownloadUrl(file.downloadUrl);\n\t\t\tthis.setRemoveUrl(file.removeUrl);\n\t\t}\n\t}\n\n\tgetName(): string\n\t{\n\t\treturn this.getFile() ? this.getFile().name : this.name;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetName(name: string): void\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.#setProperty('name', name);\n\t\t}\n\t}\n\n\tgetOriginalName(): string\n\t{\n\t\treturn this.originalName ? this.originalName : this.getName();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetOriginalName(name: string): void\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.#setProperty('originalName', name);\n\t\t}\n\t}\n\n\tgetExtension(): string\n\t{\n\t\tconst name = this.getOriginalName();\n\t\tconst position = name.lastIndexOf('.');\n\n\t\treturn position >= 0 ? name.substring(position + 1).toLowerCase() : '';\n\t}\n\n\tgetType(): string\n\t{\n\t\treturn this.getFile() ? this.getFile().type : this.type;\n\t}\n\n\t/**\n\t * internal\n\t */\n\tsetType(type: string): string\n\t{\n\t\tif (Type.isStringFilled(type))\n\t\t{\n\t\t\tthis.#setProperty('type', type);\n\t\t}\n\t}\n\n\tgetSize(): number\n\t{\n\t\treturn this.getFile() ? this.getFile().size : this.size;\n\t}\n\n\tgetSizeFormatted(): string\n\t{\n\t\treturn formatFileSize(this.getSize());\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tsetSize(size: number): void\n\t{\n\t\tif (Type.isNumber(size) && size >= 0)\n\t\t{\n\t\t\tthis.#setProperty('size', size);\n\t\t}\n\t}\n\n\tgetId(): string\n\t{\n\t\treturn this.id;\n\t}\n\n\tgetServerId(): number | string | null\n\t{\n\t\treturn this.serverId;\n\t}\n\n\tsetServerId(id: number | string): void\n\t{\n\t\tif (Type.isNumber(id) || Type.isStringFilled(id))\n\t\t{\n\t\t\tthis.#setProperty('serverId', id);\n\t\t}\n\t}\n\n\tgetStatus(): FileStatus\n\t{\n\t\treturn this.status;\n\t}\n\n\tsetStatus(status: FileStatus): void\n\t{\n\t\tthis.#setProperty('status', status);\n\t\tthis.emit('onStatusChange');\n\t}\n\n\tgetOrigin(): FileOrigin\n\t{\n\t\treturn this.origin;\n\t}\n\n\tgetDownloadUrl(): ?string\n\t{\n\t\treturn this.downloadUrl;\n\t}\n\n\tsetDownloadUrl(url: string): void\n\t{\n\t\tif (Type.isStringFilled(url))\n\t\t{\n\t\t\tthis.#setProperty('downloadUrl', url);\n\t\t}\n\t}\n\n\tgetRemoveUrl(): ?string\n\t{\n\t\treturn this.removeUrl;\n\t}\n\n\tsetRemoveUrl(url: string)\n\t{\n\t\tif (Type.isStringFilled(url))\n\t\t{\n\t\t\tthis.#setProperty('removeUrl', url);\n\t\t}\n\t}\n\n\tgetWidth(): ?number\n\t{\n\t\treturn this.width;\n\t}\n\n\tsetWidth(width: number)\n\t{\n\t\tif (Type.isNumber(width))\n\t\t{\n\t\t\tthis.#setProperty('width', width);\n\t\t}\n\t}\n\n\tgetHeight(): ?number\n\t{\n\t\treturn this.height;\n\t}\n\n\tsetHeight(height: ?number)\n\t{\n\t\tif (Type.isNumber(height))\n\t\t{\n\t\t\tthis.#setProperty('height', height);\n\t\t}\n\t}\n\n\tgetPreviewUrl(): ?string\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewUrl() : this.getServerPreviewUrl();\n\t}\n\n\tgetPreviewWidth(): ?number\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewWidth() : this.getServerPreviewWidth();\n\t}\n\n\tgetPreviewHeight(): ?number\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewHeight() : this.getServerPreviewHeight();\n\t}\n\n\tgetClientPreview(): ?File\n\t{\n\t\treturn this.clientPreview;\n\t}\n\n\tsetClientPreview(file: ?File, width: number = null, height: number = null): void\n\t{\n\t\tif (Type.isFile(file) || Type.isNull(file))\n\t\t{\n\t\t\tthis.revokeClientPreviewUrl();\n\n\t\t\tthis.#setProperty('clientPreview', file);\n\t\t\tthis.#setProperty('clientPreviewWidth', width);\n\t\t\tthis.#setProperty('clientPreviewHeight', height);\n\t\t}\n\t}\n\n\tgetClientPreviewUrl(): ?string\n\t{\n\t\tif (this.clientPreviewUrl === null && this.getClientPreview() !== null)\n\t\t{\n\t\t\tthis.clientPreviewUrl = URL.createObjectURL(this.getClientPreview());\n\t\t}\n\n\t\treturn this.clientPreviewUrl;\n\t}\n\n\trevokeClientPreviewUrl(): void\n\t{\n\t\tif (this.clientPreviewUrl !== null)\n\t\t{\n\t\t\tURL.revokeObjectURL(this.clientPreviewUrl);\n\t\t}\n\n\t\tthis.clientPreviewUrl = null;\n\t}\n\n\tgetClientPreviewWidth(): ?number\n\t{\n\t\treturn this.clientPreviewWidth;\n\t}\n\n\tgetClientPreviewHeight(): ?number\n\t{\n\t\treturn this.clientPreviewHeight;\n\t}\n\n\tgetServerPreviewUrl(): ?string\n\t{\n\t\treturn this.serverPreviewUrl;\n\t}\n\n\tsetServerPreview(url: ?string, width: number = null, height: number = null): ?string\n\t{\n\t\tif (Type.isStringFilled(url) || Type.isNull(url))\n\t\t{\n\t\t\tthis.#setProperty('serverPreviewUrl', url);\n\t\t\tthis.#setProperty('serverPreviewWidth', width);\n\t\t\tthis.#setProperty('serverPreviewHeight', height);\n\t\t}\n\t}\n\n\tgetServerPreviewWidth(): ?number\n\t{\n\t\treturn this.serverPreviewWidth;\n\t}\n\n\tgetServerPreviewHeight(): ?number\n\t{\n\t\treturn this.serverPreviewHeight;\n\t}\n\n\tisImage(): boolean\n\t{\n\t\treturn isResizableImage(this.getOriginalName(), this.getType());\n\t}\n\n\tgetProgress(): number\n\t{\n\t\treturn this.progress;\n\t}\n\n\tsetProgress(progress: ?number)\n\t{\n\t\tif (Type.isNumber(progress))\n\t\t{\n\t\t\tthis.#setProperty('progress', progress);\n\t\t}\n\t}\n\n\taddError(error: UploaderError): void\n\t{\n\t\tthis.errors.push(error);\n\t\tthis.emit('onStateChange');\n\t}\n\n\tgetError(): ?UploaderError\n\t{\n\t\treturn this.errors[0] || null;\n\t}\n\n\tgetErrors(): UploaderError[]\n\t{\n\t\treturn this.errors;\n\t}\n\n\tgetState(): { [key: string]: any }\n\t{\n\t\treturn JSON.parse(JSON.stringify(this));\n\t}\n\n\t#setProperty(name, value)\n\t{\n\t\tthis[name] = value;\n\t\tthis.emit('onStateChange');\n\t}\n\n\ttoJSON(): { [key: string]: any }\n\t{\n\t\treturn {\n\t\t\tid: this.getId(),\n\t\t\tserverId: this.getServerId(),\n\t\t\tstatus: this.getStatus(),\n\t\t\tname: this.getName(),\n\t\t\toriginalName: this.getOriginalName(),\n\t\t\tsize: this.getSize(),\n\t\t\tsizeFormatted: this.getSizeFormatted(),\n\t\t\ttype: this.getType(),\n\t\t\textension: this.getExtension(),\n\t\t\torigin: this.getOrigin(),\n\t\t\tisImage: this.isImage(),\n\t\t\tfailed: this.isFailed(),\n\t\t\twidth: this.getWidth(),\n\t\t\theight: this.getHeight(),\n\t\t\tprogress: this.getProgress(),\n\t\t\terror: this.getError(),\n\t\t\terrors: this.getErrors(),\n\n\t\t\tpreviewUrl: this.getPreviewUrl(),\n\t\t\tpreviewWidth: this.getPreviewWidth(),\n\t\t\tpreviewHeight: this.getPreviewHeight(),\n\n\t\t\tclientPreviewUrl: this.getClientPreviewUrl(),\n\t\t\tclientPreviewWidth: this.getClientPreviewWidth(),\n\t\t\tclientPreviewHeight: this.getClientPreviewHeight(),\n\n\t\t\tserverPreviewUrl: this.getServerPreviewUrl(),\n\t\t\tserverPreviewWidth: this.getServerPreviewWidth(),\n\t\t\tserverPreviewHeight: this.getServerPreviewHeight(),\n\n\t\t\tdownloadUrl: this.getDownloadUrl(),\n\t\t\tremoveUrl: this.getRemoveUrl(),\n\t\t};\n\t}\n}\n","import { BaseError, Type, Loc } from 'main.core';\n\nexport default class UploaderError extends BaseError\n{\n\tdescription: string = '';\n\torigin: string = 'client';\n\n\tconstructor(code: string, ...args)\n\t{\n\t\tlet message = Type.isString(args[0]) ? args[0] : null;\n\t\tlet description = Type.isString(args[1]) ? args[1] : null;\n\t\tconst customData = Type.isPlainObject(args[args.length - 1]) ? args[args.length - 1] : {};\n\n\t\tconst replacements = {};\n\t\tObject.keys(customData).forEach((key: string) => {\n\t\t\treplacements[`#${key}#`] = customData[key];\n\t\t});\n\n\t\tif (!Type.isString(message) && Loc.hasMessage(`UPLOADER_${code}`))\n\t\t{\n\t\t\tmessage = Loc.getMessage(`UPLOADER_${code}`, replacements);\n\t\t}\n\n\t\tif (Type.isStringFilled(message) && !Type.isString(description) && Loc.hasMessage(`UPLOADER_${code}_DESC`))\n\t\t{\n\t\t\tdescription = Loc.getMessage(`UPLOADER_${code}_DESC`, replacements);\n\t\t}\n\n\t\tsuper(message, code, customData);\n\t\tthis.setDescription(description);\n\t}\n\n\tstatic createFromAjaxErrors(errors: Array): UploaderError\n\t{\n\t\tif (!Type.isArrayFilled(errors) || !Type.isPlainObject(errors[0]))\n\t\t{\n\t\t\treturn new this('SERVER_ERROR');\n\t\t}\n\n\t\tconst uploaderError = errors.find(error => {\n\t\t\treturn error.type === 'file-uploader';\n\t\t});\n\n\t\tif (uploaderError && !uploaderError.system)\n\t\t{\n\t\t\t// Take the First Uploader User Error\n\t\t\tconst { code, message, description, customData } = uploaderError;\n\t\t\tconst error = new this(code, message, description, customData);\n\t\t\terror.setOrigin('server');\n\n\t\t\treturn error;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet { code, message, description, customData } = errors[0];\n\t\t\tif (code === 'NETWORK_ERROR')\n\t\t\t{\n\t\t\t\tmessage = Loc.getMessage('UPLOADER_NETWORK_ERROR');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcode = Type.isStringFilled(code) ? code : 'SERVER_ERROR';\n\t\t\t\tif (!Type.isStringFilled(description))\n\t\t\t\t{\n\t\t\t\t\tdescription = message;\n\t\t\t\t\tmessage = Loc.getMessage('UPLOADER_SERVER_ERROR');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.error('Uploader', errors);\n\n\t\t\tconst error = new this(code, message, description, customData);\n\t\t\terror.setOrigin('server');\n\n\t\t\treturn error;\n\t\t}\n\t}\n\n\tgetDescription(): string\n\t{\n\t\treturn this.description;\n\t}\n\n\tsetDescription(text: string): this\n\t{\n\t\tif (Type.isString(text))\n\t\t{\n\t\t\tthis.description = text;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetOrigin(): string\n\t{\n\t\treturn this.origin;\n\t}\n\n\tsetOrigin(origin: string): this\n\t{\n\t\tif (Type.isStringFilled(origin))\n\t\t{\n\t\t\tthis.origin = origin;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tclone(): UploaderError\n\t{\n\t\tconst options = JSON.parse(JSON.stringify(this));\n\t\tconst error = new UploaderError(\n\t\t\toptions.code,\n\t\t\toptions.message,\n\t\t\toptions.description,\n\t\t\toptions.customData\n\t\t);\n\n\t\terror.setOrigin(options.origin);\n\n\t\treturn error;\n\t}\n\n\ttoJSON(): { [key: string]: any }\n\t{\n\t\treturn {\n\t\t\tcode: this.getCode(),\n\t\t\tmessage: this.getMessage(),\n\t\t\tdescription: this.getDescription(),\n\t\t\torigin: this.getOrigin(),\n\t\t\tcustomData: this.getCustomData(),\n\t\t};\n\t}\n}\n","import { Type } from 'main.core';\n\nexport default class Chunk\n{\n\tdata: Blob = null;\n\toffset: number = 0;\n\tretries: number[] = [];\n\n\tconstructor(data, offset)\n\t{\n\t\tthis.data = data;\n\t\tthis.offset = offset;\n\t}\n\n\tgetNextRetryDelay(): ?number\n\t{\n\t\tif (this.retries.length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.retries.shift();\n\t}\n\n\tsetRetries(retries: number[]): void\n\t{\n\t\tif (Type.isArray(retries))\n\t\t{\n\t\t\tthis.retries = retries;\n\t\t}\n\t}\n\n\tgetData(): Blob\n\t{\n\t\treturn this.data;\n\t}\n\n\tgetOffset(): number\n\t{\n\t\treturn this.offset;\n\t}\n\n\tgetSize(): number\n\t{\n\t\treturn this.getData().size;\n\t}\n}","import Server from './server';\nimport Chunk from './chunk';\nimport { ajax as Ajax, Type } from 'main.core';\nimport AbstractUploadController from './abstract-upload-controller';\nimport UploaderError from '../uploader-error';\n\nexport default class UploadController extends AbstractUploadController\n{\n\tfile: File = null;\n\tchunkOffset: ?number = null;\n\tchunkTimeout: ?number = null;\n\ttoken: string = null;\n\txhr: XMLHttpRequest = null;\n\taborted: boolean = false;\n\n\tconstructor(server: Server)\n\t{\n\t\tsuper(server);\n\t}\n\n\tupload(file: File): void\n\t{\n\t\tif (this.chunkOffset !== null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.file = file;\n\n\t\tconst nextChunk = this.#getNextChunk();\n\t\tif (nextChunk)\n\t\t{\n\t\t\tthis.#uploadChunk(nextChunk);\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\t\tif (this.xhr)\n\t\t{\n\t\t\tthis.aborted = true;\n\t\t\tthis.xhr.abort();\n\t\t\tthis.xhr = null;\n\t\t}\n\n\t\tthis.emit('onAbort');\n\n\t\tclearTimeout(this.chunkTimeout);\n\t}\n\n\t#uploadChunk(chunk: Chunk)\n\t{\n\t\tconst totalSize = this.getFile().size;\n\t\tconst isOnlyOneChunk = chunk.getOffset() === 0 && totalSize === chunk.getSize();\n\n\t\tlet fileName = this.getFile().name;\n\t\tif (fileName.normalize)\n\t\t{\n\t\t\tfileName = fileName.normalize();\n\t\t}\n\n\t\tconst type = Type.isStringFilled(this.getFile().type) ? this.getFile().type : 'application/octet-stream';\n\t\tconst headers = [\n\t\t\t{ name: 'Content-Type', value: type },\n\t\t\t{ name: 'X-Upload-Content-Name', value: encodeURIComponent(fileName) },\n\t\t];\n\n\t\tif (!isOnlyOneChunk)\n\t\t{\n\t\t\tconst rangeStart = chunk.getOffset();\n\t\t\tconst rangeEnd = chunk.getOffset() + chunk.getSize() - 1;\n\t\t\tconst rangeHeader = `bytes ${rangeStart}-${rangeEnd}/${totalSize}`;\n\n\t\t\theaders.push({ name: 'Content-Range', value: rangeHeader });\n\t\t}\n\n\t\tconst controllerOptions = this.getServer().getControllerOptions();\n\t\tAjax.runAction('ui.fileuploader.upload', {\n\t\t\t\theaders,\n\t\t\t\tdata: chunk.getData(),\n\t\t\t\tpreparePost: false,\n\t\t\t\tgetParameters: {\n\t\t\t\t\tcontroller: this.getServer().getController(),\n\t\t\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t\t\t\ttoken: this.getToken() || '',\n\t\t\t\t},\n\t\t\t\tonrequeststart: (xhr) => {\n\t\t\t\t\tthis.xhr = xhr;\n\t\t\t\t\tthis.aborted = false;\n\t\t\t\t},\n\t\t\t\tonprogressupload: (event: ProgressEvent) => {\n\t\t\t\t\tif (event.lengthComputable)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst size = this.getFile().size;\n\t\t\t\t\t\tconst uploadedBytes = Math.min(size, chunk.getOffset() + event.loaded);\n\t\t\t\t\t\tconst progress = size > 0 ? Math.floor(uploadedBytes / size * 100) : 100;\n\t\t\t\t\t\tthis.emit('onProgress', { progress });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\tif (response.data.token)\n\t\t\t\t{\n\t\t\t\t\tthis.setToken(response.data.token);\n\n\t\t\t\t\tconst size = this.getFile().size;\n\t\t\t\t\tconst progress = size > 0 ? Math.floor((chunk.getOffset() + chunk.getSize()) / size * 100) : 100;\n\t\t\t\t\tthis.emit('onProgress', { progress });\n\n\t\t\t\t\tconst nextChunk = this.#getNextChunk();\n\t\t\t\t\tif (nextChunk)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#uploadChunk(nextChunk);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.emit('onProgress', { progress: 100 });\n\t\t\t\t\t\tthis.emit('onUpload', { fileInfo: response.data.file });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.emit('onError', { error: new UploaderError('SERVER_ERROR') });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(response => {\n\t\t\t\tif (this.aborted)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst error = UploaderError.createFromAjaxErrors(response.errors);\n\t\t\t\tconst shouldRetry = error.getCode() === 'NETWORK_ERROR';\n\n\t\t\t\tif (!shouldRetry || !this.#retryUploadChunk(chunk))\n\t\t\t\t{\n\t\t\t\t\tthis.emit('onError', { error });\n\t\t\t\t}\n\t\t\t})\n\t\t;\n\t}\n\n\t#retryUploadChunk(chunk: Chunk): boolean\n\t{\n\t\tconst nextDelay = chunk.getNextRetryDelay();\n\t\tif (nextDelay === null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tclearTimeout(this.chunkTimeout);\n\n\t\tthis.chunkTimeout = setTimeout(() => {\n\t\t\tthis.#uploadChunk(chunk);\n\t\t}, nextDelay);\n\n\t\treturn true;\n\t}\n\n\t#getNextChunk(): ?Chunk\n\t{\n\t\tif (this.getChunkOffset() !== null && this.getChunkOffset() >= this.getFile().size)\n\t\t{\n\t\t\t// End of File\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.getChunkOffset() === null)\n\t\t{\n\t\t\t// First call\n\t\t\tthis.chunkOffset = 0;\n\t\t}\n\n\t\tlet chunk: Chunk;\n\t\tif (this.getChunkOffset() === 0 && this.getFile().size <= this.getChunkSize())\n\t\t{\n\t\t\tchunk = new Chunk(this.getFile(), this.getChunkOffset());\n\t\t\tthis.chunkOffset = this.getFile().size;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst currentChunkSize = Math.min(this.getChunkSize(), this.getFile().size - this.getChunkOffset());\n\t\t\tconst nextOffset = this.getChunkOffset() + currentChunkSize;\n\t\t\tconst fileRange = this.getFile().slice(this.getChunkOffset(), nextOffset);\n\n\t\t\tchunk = new Chunk(fileRange, this.getChunkOffset());\n\t\t\tthis.chunkOffset = nextOffset;\n\t\t}\n\n\t\tchunk.setRetries([...this.getServer().getChunkRetryDelays()]);\n\n\t\treturn chunk;\n\t}\n\n\tgetFile(): File\n\t{\n\t\treturn this.file;\n\t}\n\n\tgetChunkSize(): number\n\t{\n\t\treturn this.getServer().getChunkSize();\n\t}\n\n\tgetChunkOffset(): number\n\t{\n\t\treturn this.chunkOffset;\n\t}\n\n\tgetToken(): ?string\n\t{\n\t\treturn this.token;\n\t}\n\n\tsetToken(token: string): void\n\t{\n\t\tif (Type.isStringFilled(token))\n\t\t{\n\t\t\tthis.token = token;\n\t\t}\n\t}\n}","import { ajax as Ajax, Runtime } from 'main.core';\n\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Server from './server';\nimport type ServerLoadController from './server-load-controller';\n\nconst queues = new WeakMap();\n\nexport function loadMultiple(controller: ServerLoadController, file: UploaderFile)\n{\n\tconst server = controller.getServer();\n\tlet queue = queues.get(server);\n\tif (!queue)\n\t{\n\t\tqueue = {\n\t\t\ttasks: [],\n\t\t\tload: Runtime.debounce(loadInternal, 100, server),\n\t\t\txhr: null,\n\t\t};\n\n\t\tqueues.set(server, queue);\n\t}\n\n\tqueue.tasks.push({ controller, file });\n\tqueue.load();\n}\n\nexport function abort(controller: ServerLoadController)\n{\n\tconst server = controller.getServer();\n\tconst queue = queues.get(server);\n\tif (queue)\n\t{\n\t\tqueue.xhr.abort();\n\t\tqueue.xhr = null;\n\t\tqueues.delete(server);\n\n\t\tqueue.tasks.forEach(task => {\n\t\t\tconst { controller, file } = task;\n\t\t\tcontroller.emit('onAbort');\n\t\t});\n\t}\n}\n\nfunction loadInternal()\n{\n\tconst server: Server = this;\n\tconst queue = queues.get(server);\n\tif (!queue)\n\t{\n\t\treturn;\n\t}\n\n\tconst { tasks } = queue;\n\tqueues.delete(server);\n\n\tconst fileIds = [];\n\ttasks.forEach(task => {\n\t\tconst { controller, file } = task;\n\t\tfileIds.push(file.getServerId());\n\t});\n\n\tconst controllerOptions = server.getControllerOptions();\n\tAjax.runAction('ui.fileuploader.load', {\n\t\t\tdata: {\n\t\t\t\tfileIds: fileIds,\n\t\t\t},\n\t\t\tgetParameters: {\n\t\t\t\tcontroller: server.getController(),\n\t\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t\t},\n\t\t\tonrequeststart: (xhr) => {\n\t\t\t\tqueue.xhr = xhr;\n\t\t\t},\n\t\t\tonprogress: (event: ProgressEvent) => {\n\t\t\t\tif (event.lengthComputable)\n\t\t\t\t{\n\t\t\t\t\tconst progress = event.total > 0 ? Math.floor(event.loaded / event.total * 100) : 100;\n\n\t\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\t\tconst { controller, file } = task;\n\t\t\t\t\t\tcontroller.emit('onProgress', { file, progress });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t\t.then(response => {\n\t\t\tif (response.data?.files)\n\t\t\t{\n\t\t\t\tconst fileResults = {};\n\t\t\t\tresponse.data.files.forEach((fileResult) => {\n\t\t\t\t\tfileResults[fileResult.id] = fileResult;\n\t\t\t\t});\n\n\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\tconst { controller, file } = task;\n\t\t\t\t\tconst fileResult = fileResults[file.getServerId()] || null;\n\n\t\t\t\t\tif (fileResult && fileResult.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.emit('onProgress', { file, progress: 100 });\n\t\t\t\t\t\tcontroller.emit('onLoad', { fileInfo: fileResult.data.file });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconst error = UploaderError.createFromAjaxErrors(fileResult?.errors);\n\t\t\t\t\t\tcontroller.emit('onError', { error });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst error = new UploaderError('SERVER_ERROR');\n\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\tconst { controller } = task;\n\t\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.catch(response => {\n\t\t\tconst error = UploaderError.createFromAjaxErrors(response.errors);\n\t\t\ttasks.forEach(task => {\n\t\t\t\tconst { controller } = task;\n\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t});\n\t\t})\n\t;\n}","import AbstractLoadController from './abstract-load-controller';\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\nimport { loadMultiple, abort } from './server-load-multiple';\n\nexport default class ServerLoadController extends AbstractLoadController\n{\n\tconstructor(server: Server)\n\t{\n\t\tsuper(server);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (this.getServer().getController())\n\t\t{\n\t\t\tloadMultiple(this, file);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onProgress', { file, progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: file });\n\t\t}\n\t\t// const controllerOptions = this.getServer().getControllerOptions();\n\t\t// Ajax.runAction('ui.fileuploader.load', {\n\t\t// \t\tdata: {\n\t\t// \t\t\tfileIds: [file.getServerId()],\n\t\t// \t\t},\n\t\t// \t\tgetParameters: {\n\t\t// \t\t\tcontroller: this.getServer().getController(),\n\t\t// \t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t// \t\t},\n\t\t// \t\tonrequeststart: (xhr) => {\n\t\t// \t\t\tthis.xhr = xhr;\n\t\t// \t\t},\n\t\t// \t\tonprogress: (event: ProgressEvent) => {\n\t\t// \t\t\tif (event.lengthComputable)\n\t\t// \t\t\t{\n\t\t// \t\t\t\tconst progress = event.total > 0 ? Math.floor(event.loaded / event.total * 100): 100;\n\t\t// \t\t\t\tthis.emit('onProgress', { progress });\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t})\n\t\t// \t.then(response => {\n\t\t// \t\tif (response.data?.files)\n\t\t// \t\t{\n\t\t// \t\t\tthis.emit('onProgress', { file, progress: 100 });\n\t\t// \t\t\tthis.emit('onLoad', { file: response.data.file })\n\t\t// \t\t}\n\t\t// \t\telse\n\t\t// \t\t{\n\t\t// \t\t\tthis.emit('onError', { error: new UploaderError('SERVER_ERROR') });\n\t\t// \t\t}\n\t\t// \t})\n\t\t// \t.catch(response => {\n\t\t// \t\tthis.emit('onError', { error: UploaderError.createFromAjaxErrors(response.errors) });\n\t\t// \t})\n\t\t// ;\n\t}\n\n\tabort(): void\n\t{\n\t\tif (this.getServer().getController())\n\t\t{\n\t\t\tabort(this);\n\t\t}\n\t}\n}","import AbstractLoadController from './abstract-load-controller';\nimport Server from './server';\nimport UploaderFile from '../uploader-file';\nimport { Type } from 'main.core';\nimport UploaderError from '../uploader-error';\n\nexport default class ClientLoadController extends AbstractLoadController\n{\n\tconstructor(server: Server)\n\t{\n\t\tsuper(server);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (Type.isFile(file.getFile()))\n\t\t{\n\t\t\tthis.emit('onProgress', { file, progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: file });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onError', { error: new UploaderError('WRONG_FILE_SOURCE') });\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\n\t}\n\n}","import { Extension, Runtime, Type } from 'main.core';\nimport type { ServerOptions } from '../types/server-options';\nimport UploadController from './upload-controller';\nimport AbstractUploadController from './abstract-upload-controller';\nimport ServerLoadController from './server-load-controller';\nimport AbstractLoadController from './abstract-load-controller';\nimport ClientLoadController from './client-load-controller';\n\nexport default class Server\n{\n\tcontroller: ?string = null;\n\tcontrollerOptions: ?{ [key: string]: any } = null;\n\tuploadControllerClass: Class<AbstractUploadController> = null;\n\tloadControllerClass: Class<AbstractLoadController> = null;\n\tchunkSize: number = null;\n\tdefaultChunkSize: number = null;\n\tchunkMinSize: number = null;\n\tchunkMaxSize: number = null;\n\tchunkRetryDelays: number[] = [1000, 3000, 6000];\n\n\tconstructor(serverOptions: ServerOptions)\n\t{\n\t\tconst options = Type.isPlainObject(serverOptions) ? serverOptions : {};\n\n\t\tthis.controller = Type.isStringFilled(options.controller) ? options.controller : null;\n\t\tthis.controllerOptions = Type.isPlainObject(options.controllerOptions) ? options.controllerOptions : null;\n\n\t\tconst chunkSize =\n\t\t\tType.isNumber(options.chunkSize) && options.chunkSize > 0\n\t\t\t\t? options.chunkSize\n\t\t\t\t: this.getDefaultChunkSize()\n\t\t;\n\n\t\tthis.chunkSize = options.forceChunkSize === true ? chunkSize : this.#calcChunkSize(chunkSize);\n\n\t\tif (options.chunkRetryDelays === false || options.chunkRetryDelays === null)\n\t\t{\n\t\t\tthis.chunkRetryDelays = [];\n\t\t}\n\t\telse if (Type.isArray(options.chunkRetryDelays))\n\t\t{\n\t\t\tthis.chunkRetryDelays = options.chunkRetryDelays;\n\t\t}\n\n\t\t['uploadControllerClass', 'loadControllerClass'].forEach((controllerClass: string) => {\n\t\t\tif (Type.isStringFilled(options[controllerClass]))\n\t\t\t{\n\t\t\t\tthis[controllerClass] = Runtime.getClass(options[controllerClass]);\n\t\t\t\tif (!Type.isFunction(options[controllerClass]))\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(`Uploader.Server: \"${controllerClass}\" must be a function.`);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (Type.isFunction(options[controllerClass]))\n\t\t\t{\n\t\t\t\tthis[controllerClass] = options[controllerClass];\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateUploadController(): ?UploadController\n\t{\n\t\tif (this.uploadControllerClass)\n\t\t{\n\t\t\tconst controller = new this.uploadControllerClass(this);\n\t\t\tif (!(controller instanceof AbstractUploadController))\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Uploader.Server: \"uploadControllerClass\" must be an instance of AbstractUploadController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\t\telse if (Type.isStringFilled(this.controller))\n\t\t{\n\t\t\treturn new UploadController(this);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tcreateLoadController(): ServerLoadController\n\t{\n\t\tif (this.loadControllerClass)\n\t\t{\n\t\t\tconst controller = new this.loadControllerClass(this);\n\t\t\tif (!(controller instanceof AbstractLoadController))\n\t\t\t{\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Uploader.Server: \"loadControllerClass\" must be an instance of AbstractLoadController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\n\t\treturn new ServerLoadController(this);\n\t}\n\n\tcreateClientLoadController(): ClientLoadController\n\t{\n\t\treturn new ClientLoadController(this);\n\t}\n\n\tgetController(): ?string\n\t{\n\t\treturn this.controller;\n\t}\n\n\tgetControllerOptions(): ?{ [key: string]: any }\n\t{\n\t\treturn this.controllerOptions;\n\t}\n\n\tgetChunkSize(): number\n\t{\n\t\treturn this.chunkSize;\n\t}\n\n\tgetDefaultChunkSize(): number\n\t{\n\t\tif (this.defaultChunkSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.defaultChunkSize = settings.get('defaultChunkSize', 5 * 1024 * 1024);\n\t\t}\n\n\t\treturn this.defaultChunkSize;\n\t}\n\n\tgetChunkMinSize(): number\n\t{\n\t\tif (this.chunkMinSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.chunkMinSize = settings.get('chunkMinSize', 1024 * 1024);\n\t\t}\n\n\t\treturn this.chunkMinSize;\n\t}\n\n\tgetChunkMaxSize(): number\n\t{\n\t\tif (this.chunkMaxSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.chunkMaxSize = settings.get('chunkMaxSize', 5 * 1024 * 1024);\n\t\t}\n\n\t\treturn this.chunkMaxSize;\n\t}\n\n\tgetChunkRetryDelays(): number[]\n\t{\n\t\treturn this.chunkRetryDelays;\n\t}\n\n\t#calcChunkSize(chunkSize: number): number\n\t{\n\t\treturn Math.min(Math.max(this.getChunkMinSize(), chunkSize), this.getChunkMaxSize());\n\t}\n}\n","import type Uploader from '../uploader';\n\nexport default class Filter\n{\n\tuploader: Uploader = null;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tthis.uploader = uploader;\n\t}\n\n\tgetUploader(): Uploader\n\t{\n\t\treturn this.uploader;\n\t}\n\n\t/**\n\t * @abstract\n\t */\n\tapply(...args): Promise\n\t{\n\t\tthrow new Error('You must implement apply() method.');\n\t}\n}\n","import { Type } from 'main.core';\nimport Filter from './filter';\nimport UploaderError from '../uploader-error';\nimport formatFileSize from '../helpers/format-file-size';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\n\nexport default class FileSizeFilter extends Filter\n{\n\tmaxFileSize: number = null;\n\tminFileSize: number = null;\n\tmaxTotalFileSize: number = null;\n\timageMaxFileSize: number = null;\n\timageMinFileSize: number = null;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\n\t\tconst integerOptions = [\n\t\t\t'maxFileSize',\n\t\t\t'minFileSize',\n\t\t\t'maxTotalFileSize',\n\t\t\t'imageMaxFileSize',\n\t\t\t'imageMinFileSize',\n\t\t];\n\n\t\tintegerOptions.forEach(option => {\n\t\t\tthis[option] = Type.isNumber(options[option]) && options[option] >= 0 ? options[option] : this[option];\n\t\t});\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tif (this.maxFileSize !== null && file.getSize() > this.maxFileSize)\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MAX_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxFileSize: formatFileSize(this.maxFileSize),\n\t\t\t\t\t\t\tmaxFileSizeInBytes: this.maxFileSize,\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.minFileSize !== null && file.getSize() < this.minFileSize)\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MIN_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tminFileSize: formatFileSize(this.minFileSize),\n\t\t\t\t\t\t\tminFileSizeInBytes: this.minFileSize,\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (file.isImage())\n\t\t\t{\n\t\t\t\tif (this.imageMaxFileSize !== null && file.getSize() > this.imageMaxFileSize)\n\t\t\t\t{\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t'IMAGE_MAX_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\timageMaxFileSize: formatFileSize(this.imageMaxFileSize),\n\t\t\t\t\t\t\t\timageMaxFileSizeInBytes: this.imageMaxFileSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.imageMinFileSize !== null && file.getSize() < this.imageMinFileSize)\n\t\t\t\t{\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t'IMAGE_MIN_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\timageMinFileSize: formatFileSize(this.imageMinFileSize),\n\t\t\t\t\t\t\t\timageMinFileSizeInBytes: this.imageMinFileSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.maxTotalFileSize !== null)\n\t\t\t{\n\t\t\t\tif (this.getUploader().getTotalSize() > this.maxTotalFileSize)\n\t\t\t\t{\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t'MAX_TOTAL_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmaxTotalFileSize: formatFileSize(this.maxTotalFileSize),\n\t\t\t\t\t\t\t\tmaxTotalFileSizeInBytes: this.maxTotalFileSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresolve();\n\t\t});\n\n\t}\n}\n","import { Type } from 'main.core';\n\nconst isValidFileType = (file: File, fileTypes: string[]): boolean => {\n\tif (!Type.isArrayFilled(fileTypes))\n\t{\n\t\treturn true;\n\t}\n\n\tconst mimeType = file.type;\n\tconst baseMimeType = mimeType.replace(/\\/.*$/, '');\n\n\tfor (let i = 0; i < fileTypes.length; i++)\n\t{\n\t\tif (!Type.isStringFilled(fileTypes[i]))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst type = fileTypes[i].trim().toLowerCase();\n\n\t\tif (type.charAt(0) === '.') // extension case\n\t\t{\n\t\t\tif (file.name.toLowerCase().indexOf(type, file.name.length - type.length) !== -1)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (/\\/\\*$/.test(type)) // image/* mime type case\n\t\t{\n\t\t\tif (baseMimeType === type.replace(/\\/.*$/, ''))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (mimeType === type)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nexport default isValidFileType;","import Filter from './filter';\nimport isValidFileType from '../helpers/is-valid-file-type';\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Uploader from '../uploader';\n\nexport default class FileTypeFilter extends Filter\n{\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tif (isValidFileType(file.getFile(), this.getUploader().getAcceptedFileTypes()))\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treject(new UploaderError('FILE_TYPE_NOT_ALLOWED'));\n\t\t\t}\n\t\t});\n\t}\n}\n","const getArrayBuffer = (file: File | Blob): Promise<ArrayBuffer> => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.readAsArrayBuffer(file);\n\n\t\tfileReader.onload = () => {\n\t\t\tconst buffer: ArrayBuffer = fileReader.result;\n\n\t\t\tresolve(buffer);\n\t\t};\n\n\t\tfileReader.onerror = () => {\n\t\t\treject(fileReader.error);\n\t\t};\n\t});\n};\n\nexport default getArrayBuffer;","const convertStringToBuffer = (str: string): ArrayLike => {\n\tconst result = [];\n\tfor (let i = 0; i < str.length; i++)\n\t{\n\t\tresult.push(str.charCodeAt(i) & 0xFF);\n\t}\n\n\treturn result;\n};\nexport default convertStringToBuffer;","const compareBuffers = (dataView: DataView, dest: ArrayLike, start: number): boolean => {\n\tfor (let i = start, j = 0; j < dest.length;)\n\t{\n\t\tif (dataView.getUint8(i++) !== dest[j++])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\nexport default compareBuffers;","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\n\nimport type { ImageSize } from '../image-size-type';\n\nconst GIF87a = convertStringToBuffer('GIF87a');\nconst GIF89a = convertStringToBuffer('GIF89a');\n\nexport default class Gif\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 10)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 10);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\n\t\t\t\t\tif (!compareBuffers(view, GIF87a, 0) && !compareBuffers(view, GIF89a, 0))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\twidth: view.getUint16(6, true),\n\t\t\t\t\t\theight: view.getUint16(8, true),\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\nimport type { ImageSize } from '../image-size-type';\n\nconst PNG_SIGNATURE = convertStringToBuffer('\\x89PNG\\r\\n\\x1a\\n');\nconst IHDR_SIGNATURE = convertStringToBuffer('IHDR');\nconst FRIED_CHUNK_NAME = convertStringToBuffer('CgBI');\n\nexport default class Png\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 40)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 40);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\n\t\t\t\t\tif (!compareBuffers(view, PNG_SIGNATURE, 0))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (compareBuffers(view, FRIED_CHUNK_NAME, 12))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (compareBuffers(view, IHDR_SIGNATURE, 28))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\twidth: view.getUint32(32),\n\t\t\t\t\t\t\t\theight: view.getUint32(36),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (compareBuffers(view, IHDR_SIGNATURE, 12))\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: view.getUint32(16),\n\t\t\t\t\t\t\theight: view.getUint32(20),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n};\n","import getArrayBuffer from '../../get-array-buffer';\nimport type { ImageSize } from '../image-size-type';\n\nconst BMP_SIGNATURE = 0x424d; // BM\n\nexport default class Bmp\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 26)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 26);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (!view.getUint16(0) === BMP_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\twidth: view.getUint32(18, true),\n\t\t\t\t\t\theight: Math.abs(view.getInt32(22, true)),\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\n\nimport type { ImageSize } from '../image-size-type';\n\nconst EXIF_SIGNATURE = convertStringToBuffer('Exif\\0\\0');\n\nexport default class Jpeg\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 2)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tgetArrayBuffer(file)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (view.getUint8(0) !== 0xFF || view.getUint8(1) !== 0xD8)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offset = 2;\n\t\t\t\t\tlet orientation = -1;\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (view.byteLength - offset < 2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (view.getUint8(offset++) !== 0xFF)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet code = view.getUint8(offset++);\n\t\t\t\t\t\tlet length;\n\n\t\t\t\t\t\t// skip padding bytes\n\t\t\t\t\t\twhile (code === 0xFF)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcode = view.getUint8(offset++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((0xD0 <= code && code <= 0xD9) || code === 0x01)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlength = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (0xC0 <= code && code <= 0xFE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// the rest of the unreserved markers\n\t\t\t\t\t\t\tif (view.byteLength - offset < 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlength = view.getUint16(offset) - 2;\n\t\t\t\t\t\t\toffset += 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// unknown markers\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (code === 0xD9 /* EOI */ || code === 0xDA /* SOS */)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// end of the datastream\n\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// try to get orientation from Exif segment\n\t\t\t\t\t\tif (code === 0xE1 && length >= 10 && compareBuffers(view, EXIF_SIGNATURE, offset))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst exifBlock = new DataView(view.buffer, offset + 6, offset + length);\n\t\t\t\t\t\t\torientation = getOrientation(exifBlock);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlength >= 5\n\t\t\t\t\t\t\t&& (0xC0 <= code && code <= 0xCF)\n\t\t\t\t\t\t\t&& code !== 0xC4 && code !== 0xC8 && code !== 0xCC\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (view.byteLength - offset < length)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet width = view.getUint16(offset + 3);\n\t\t\t\t\t\t\tlet height = view.getUint16(offset + 1);\n\t\t\t\t\t\t\tif (orientation >= 5 && orientation <= 8)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[width, height] = [height, width];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn resolve({\n\t\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\t\torientation,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toffset += length;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n\nconst Marker = {\n\tBIG_ENDIAN: 0x4d4d,\n\tLITTLE_ENDIAN: 0x4949,\n};\n\nconst getOrientation = (exifBlock: DataView) => {\n\tconst byteAlign = exifBlock.getUint16(0);\n\tconst isBigEndian = byteAlign === Marker.BIG_ENDIAN;\n\tconst isLittleEndian = byteAlign === Marker.LITTLE_ENDIAN;\n\n\tif (isBigEndian || isLittleEndian)\n\t{\n\t\treturn extractOrientation(exifBlock, isLittleEndian);\n\t}\n\n\treturn -1;\n};\n\nconst extractOrientation = (exifBlock: DataView, littleEndian: boolean = false) => {\n\n\tconst offset = 8; // idf offset\n\tconst idfDirectoryEntries = exifBlock.getUint16(offset, littleEndian);\n\n\tconst IDF_ENTRY_BYTES = 12;\n\tconst NUM_DIRECTORY_ENTRIES_BYTES = 2;\n\n\tfor (let directoryEntryNumber = 0; directoryEntryNumber < idfDirectoryEntries; directoryEntryNumber++)\n\t{\n\t\tconst start = offset + NUM_DIRECTORY_ENTRIES_BYTES + (directoryEntryNumber * IDF_ENTRY_BYTES);\n\t\tconst end = start + IDF_ENTRY_BYTES;\n\n\t\t// Skip on corrupt EXIF blocks\n\t\tif (start > exifBlock.byteLength)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst block = new DataView(exifBlock.buffer, exifBlock.byteOffset + start, end - start);\n\t\tconst tagNumber = block.getUint16(0, littleEndian);\n\n\t\t// 274 is the `orientation` tag ID\n\t\tif (tagNumber === 274)\n\t\t{\n\t\t\tconst dataFormat = block.getUint16(2, littleEndian)\n\t\t\tif (dataFormat !== 3)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tconst numberOfComponents = block.getUint32(4, littleEndian);\n\t\t\tif (numberOfComponents !== 1)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\treturn block.getUint16(8, littleEndian)\n\t\t}\n\t}\n};\n","import getArrayBuffer from '../../get-array-buffer';\nimport type { ImageSize } from '../image-size-type';\n\nconst RIFF_HEADER = 0x52494646; // RIFF\nconst WEBP_SIGNATURE = 0x57454250; // WEBP\nconst VP8_SIGNATURE = 0x56503820; // VP8\nconst VP8L_SIGNATURE = 0x5650384c; // VP8L\nconst VP8X_SIGNATURE = 0x56503858; // VP8X\n\nexport default class Webp\n{\n\tgetSize(file: File): Promise<?ImageSize>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 16)\n\t\t\t{\n\t\t\t\treturn resolve(null);\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 30);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (view.getUint32(0) !== RIFF_HEADER && view.getUint32(8) !== WEBP_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn resolve(null);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst headerType = view.getUint32(12);\n\t\t\t\t\tconst headerView = new DataView(buffer, 20, 10);\n\t\t\t\t\tif (headerType === VP8_SIGNATURE && headerView.getUint8(0) !== 0x2f)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: headerView.getUint16(6, true) & 0x3fff,\n\t\t\t\t\t\t\theight: headerView.getUint16(8, true) & 0x3fff,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (headerType === VP8L_SIGNATURE && headerView.getUint8(0) === 0x2f)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst bits = headerView.getUint32(1, true);\n\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: (bits & 0x3FFF) + 1,\n\t\t\t\t\t\t\theight: ((bits >> 14) & 0x3FFF) + 1,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (headerType === VP8X_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst extendedHeader = headerView.getUint8(0);\n\t\t\t\t\t\tconst validStart = (extendedHeader & 0xc0) === 0;\n\t\t\t\t\t\tconst validEnd = (extendedHeader & 0x01) === 0;\n\t\t\t\t\t\tif (validStart && validEnd)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst width = 1 + (\n\t\t\t\t\t\t\t\t(headerView.getUint8(6) << 16)\n\t\t\t\t\t\t\t\t| (headerView.getUint8(5) << 8)\n\t\t\t\t\t\t\t\t| headerView.getUint8(4)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst height = 1 + (\n\t\t\t\t\t\t\t\t(headerView.getUint8(9) << 0)\n\t\t\t\t\t\t\t\t| (headerView.getUint8(8) << 8)\n\t\t\t\t\t\t\t\t| headerView.getUint8(7)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresolve({ width, height });\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(null);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import Gif from './types/gif';\nimport Png from './types/png';\nimport Bmp from './types/bmp';\nimport Jpeg from './types/jpeg';\nimport Webp from './types/webp';\n\nimport getFileExtension from '../get-file-extension';\nimport type { ImageSize } from './image-size-type';\n\nconst jpg = new Jpeg();\nconst typeHandlers = {\n\tgif: new Gif(),\n\tpng: new Png(),\n\tbmp: new Bmp(),\n\tjpg: jpg,\n\tjpeg: jpg,\n\tjpe: jpg,\n\twebp: new Webp()\n};\n\nconst getImageSize = (file: File): Promise<?ImageSize> => {\n\tif (file.size === 0)\n\t{\n\t\treturn Promise.resolve(null);\n\t}\n\n\tconst extension = getFileExtension(file.name).toLowerCase();\n\tconst type = file.type.replace(/^image\\//, '');\n\tconst typeHandler = typeHandlers[extension] || typeHandlers[type];\n\tif (!typeHandler)\n\t{\n\t\treturn Promise.resolve(null);\n\t}\n\n\treturn typeHandler.getSize(file);\n};\n\nexport default getImageSize;\n\n","import { Type } from 'main.core';\n\nimport Filter from './filter';\nimport UploaderError from '../uploader-error';\nimport getImageSize from '../helpers/image-size/get-image-size';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\n\nexport default class ImageSizeFilter extends Filter\n{\n\timageMinWidth: number = 1;\n\timageMinHeight: number = 1;\n\timageMaxWidth: number = 10000;\n\timageMaxHeight: number = 10000;\n\tignoreUnknownImageTypes: boolean = false;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\n\t\t['imageMinWidth', 'imageMinHeight', 'imageMaxWidth', 'imageMaxHeight'].forEach(option => {\n\t\t\tthis[option] = Type.isNumber(options[option]) && options[option] > 0 ? options[option] : this[option];\n\t\t});\n\n\t\tif (Type.isBoolean(options['ignoreUnknownImageTypes']))\n\t\t{\n\t\t\tthis.ignoreUnknownImageTypes = options['ignoreUnknownImageTypes'];\n\t\t}\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tif (!file.isImage())\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgetImageSize(file.getFile())\n\t\t\t\t.then(({ width, height }) => {\n\t\t\t\t\tfile.setWidth(width);\n\t\t\t\t\tfile.setHeight(height);\n\n\t\t\t\t\tif (width < this.imageMinWidth || height < this.imageMinHeight)\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new UploaderError(\n\t\t\t\t\t\t\t'IMAGE_IS_TOO_SMALL',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tminWidth: this.imageMinWidth,\n\t\t\t\t\t\t\t\tminHeight: this.imageMinHeight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t\telse if (width > this.imageMaxWidth || height > this.imageMaxHeight)\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new UploaderError(\n\t\t\t\t\t\t\t'IMAGE_IS_TOO_BIG',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmaxWidth: this.imageMaxWidth,\n\t\t\t\t\t\t\t\tmaxHeight: this.imageMaxHeight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tif (this.ignoreUnknownImageTypes)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new UploaderError('IMAGE_TYPE_NOT_SUPPORTED'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import createUniqueId from './create-unique-id';\n\nconst createWorker = (fn: Function) => {\n\tconst workerBlob = new Blob(['(', fn.toString(), ')()'], { type: 'application/javascript' });\n\tconst workerURL = URL.createObjectURL(workerBlob);\n\tconst worker = new Worker(workerURL);\n\n\treturn {\n\t\tpost: (message, callback, transfer): void => {\n\t\t\tconst id = createUniqueId();\n\t\t\tworker.onmessage = event => {\n\t\t\t\tif (event.data.id === id)\n\t\t\t\t{\n\t\t\t\t\tcallback(event.data.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tworker.postMessage({ id, message }, transfer);\n\t\t},\n\t\tterminate: (): void => {\n\t\t\tworker.terminate();\n\t\t\tURL.revokeObjectURL(workerURL);\n\t\t}\n\t};\n};\n\nexport default createWorker;","const BitmapWorker = function() {\n\tself.onmessage = event => {\n\t\tcreateImageBitmap(event.data.message.file)\n\t\t\t.then(bitmap => {\n\t\t\t\tself.postMessage({ id: event.data.id, message: bitmap }, [bitmap]);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tself.postMessage({ id: event.data.id, message: null }, []);\n\t\t\t})\n\t\t;\n\t};\n};\n\nexport default BitmapWorker;","const loadImage = (file: File | Blob) => new Promise((resolve, reject) => {\n\n\tconst image = document.createElement('img');\n\tconst url = URL.createObjectURL(file);\n\timage.src = url;\n\n\timage.onerror = error => {\n\t\tURL.revokeObjectURL(image.src);\n\t\treject(error);\n\t};\n\n\timage.onload = () => {\n\t\tURL.revokeObjectURL(url);\n\t\tresolve({\n\t\t\twidth: image.naturalWidth,\n\t\t\theight: image.naturalHeight,\n\t\t\timage\n\t\t});\n\t};\n});\n\nexport default loadImage;","const createImagePreview = (data, width: number, height: number) => {\n\twidth = Math.round(width);\n\theight = Math.round(height);\n\n\tconst canvas = document.createElement('canvas');\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tconst context = canvas.getContext('2d');\n\t// context.imageSmoothingQuality = 'high';\n\tcontext.drawImage(data, 0, 0, width, height);\n\n\treturn canvas;\n};\n\nexport default createImagePreview;","const getFilenameWithoutExtension = (name) => {\n\treturn name.substr(0, name.lastIndexOf('.')) || name;\n};\n\nexport default getFilenameWithoutExtension;","import getFilenameWithoutExtension from './get-filename-without-extension';\n\nconst extensionMap = {\n\t'jpeg': 'jpg',\n};\n\nconst renameFileToMatchMimeType = (filename, mimeType) => {\n\tconst name = getFilenameWithoutExtension(filename);\n\tconst type = mimeType.split('/')[1];\n\tconst extension = extensionMap[type] || type;\n\n\treturn `${name}.${extension}`;\n};\n\nexport default renameFileToMatchMimeType;","import createBlobFromDataUri from './create-blob-from-data-uri';\n\nconst canvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\nconst hasToBlobSupport = window.HTMLCanvasElement && canvasPrototype.toBlob;\n\nconst convertCanvasToBlob = (canvas: HTMLCanvasElement, type: string, quality: number) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (hasToBlobSupport)\n\t\t{\n\t\t\tcanvas.toBlob((blob: Blob) => {\n\t\t\t\tresolve(blob);\n\t\t\t}, type, quality);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst blob = createBlobFromDataUri(canvas.toDataURL(type, quality));\n\n\t\t\tresolve(blob);\n\t\t}\n\t});\n};\n\nexport default convertCanvasToBlob;","import createWorker from './create-worker';\nimport BitmapWorker from './bitmap-worker';\nimport loadImage from './load-image';\nimport createImagePreview from './create-image-preview';\nimport renameFileToMatchMimeType from './rename-file-to-match-mime-type';\nimport createFileFromBlob from './create-file-from-blob';\nimport convertCanvasToBlob from './convert-canvas-to-blob';\n\ntype ResizeImageOptions = {\n\tmode?: 'contain' | 'crop' | 'force',\n\tupscale?: boolean,\n\twidth?: number,\n\theight?: number,\n\tquality?: number,\n};\n\nconst canCreateImageBitmap = (\n\t'createImageBitmap' in window\n\t&& typeof ImageBitmap !== 'undefined'\n\t&& ImageBitmap.prototype\n\t&& ImageBitmap.prototype.close\n);\n\nconst resizeImage = (file: File, options: ResizeImageOptions) => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst loadImageDataFallback = () => {\n\t\t\tloadImage(file)\n\t\t\t\t.then(({ image }) => {\n\t\t\t\t\thandleImageLoad(image);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t};\n\n\t\tconst handleImageLoad = (imageData: ImageBitmap | HTMLImageElement) => {\n\t\t\tconst { targetWidth, targetHeight } = calcTargetSize(imageData, options);\n\t\t\tif (!targetWidth || !targetHeight)\n\t\t\t{\n\t\t\t\tif ('close' in imageData)\n\t\t\t\t{\n\t\t\t\t\timageData.close();\n\t\t\t\t}\n\n\t\t\t\tresolve({\n\t\t\t\t\tpreview: file,\n\t\t\t\t\twidth: imageData.width,\n\t\t\t\t\theight: imageData.height,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst canvas = createImagePreview(imageData, targetWidth, targetHeight);\n\n\t\t\t// if it was ImageBitmap\n\t\t\tif ('close' in imageData)\n\t\t\t{\n\t\t\t\timageData.close();\n\t\t\t}\n\n\t\t\tconst { quality = 0.92, mimeType = 'image/jpeg' } = options;\n\t\t\tconst type = /jpeg|png|webp/.test(file.type) ? file.type : mimeType;\n\n\t\t\tconvertCanvasToBlob(canvas, type, quality)\n\t\t\t\t.then((blob: Blob) => {\n\t\t\t\t\tconst newFileName = renameFileToMatchMimeType(file.name, type);\n\t\t\t\t\tconst preview = createFileFromBlob(blob, newFileName);\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tpreview,\n\t\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\t\theight: targetHeight,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\treject();\n\t\t\t\t})\n\t\t\t;\n\t\t};\n\n\t\tif (canCreateImageBitmap)\n\t\t{\n\t\t\tconst bitmapWorker = createWorker(BitmapWorker);\n\t\t\tbitmapWorker.post({ file },\n\t\t\t\t(imageBitmap: ImageBitmap) => {\n\t\t\t\t\tbitmapWorker.terminate();\n\t\t\t\t\tif (imageBitmap)\n\t\t\t\t\t{\n\t\t\t\t\t\thandleImageLoad(imageBitmap);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tloadImageDataFallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tloadImageDataFallback();\n\t\t}\n\t});\n};\n\nexport default resizeImage;\n\nconst calcTargetSize = (imageData: ImageBitmap | HTMLImageElement, options = {}) => {\n\tlet { mode = 'contain', upscale = false, width, height } = options;\n\n\tconst result = {\n\t\ttargetWidth: 0,\n\t\ttargetHeight: 0,\n\t};\n\n\tif (!width && !height)\n\t{\n\t\treturn result;\n\t}\n\n\tif (width === null)\n\t{\n\t\twidth = height;\n\t}\n\telse if (height === null)\n\t{\n\t\theight = width;\n\t}\n\n\tif (mode !== 'force')\n\t{\n\t\tconst ratioWidth = width / imageData.width;\n\t\tconst ratioHeight = height / imageData.height;\n\t\tlet ratio = 1;\n\n\t\tif (mode === 'cover')\n\t\t{\n\t\t\tratio = Math.max(ratioWidth, ratioHeight);\n\t\t}\n\t\telse if (mode === 'contain')\n\t\t{\n\t\t\tratio = Math.min(ratioWidth, ratioHeight);\n\t\t}\n\n\t\t// if image is too small, exit here with original image\n\t\tif (ratio > 1 && upscale === false)\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\twidth = imageData.width * ratio;\n\t\theight = imageData.height * ratio;\n\t}\n\n\t/*if (mode === 'crop')\n\t{\n\t\tconst sourceImageRatio = sourceImageWidth / sourceImageHeight;\n\t\tconst targetRatio = targetWidth / targetHeight;\n\n\t\tif (sourceImageRatio > targetRatio)\n\t\t{\n\t\t\tconst newWidth = sourceImageHeight * targetRatio;\n\t\t\tsrcX = (sourceImageWidth - newWidth) / 2;\n\t\t\tsourceImageWidth = newWidth;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst newHeight = sourceImageWidth / targetRatio;\n\t\t\tsrcY = (sourceImageHeight - newHeight) / 2;\n\t\t\tsourceImageHeight = newHeight;\n\t\t}\n\n\t\tcontext.drawImage(image, srcX, srcY, sourceImageWidth, sourceImageHeight, 0, 0, targetWidth, targetHeight);\n\t}*/\n\n\tresult.targetWidth = Math.round(width);\n\tresult.targetHeight = Math.round(height);\n\n\treturn result;\n};","import { Type } from 'main.core';\n\nimport Filter from './filter';\nimport resizeImage from '../helpers/resize-image';\nimport isResizableImage from '../helpers/is-resizable-image';\n\nimport type UploaderFile from '../uploader-file';\nimport type Uploader from '../uploader';\n\nexport default class ImagePreviewFilter extends Filter\n{\n\timagePreviewWidth: number = 300;\n\timagePreviewHeight: number = 300;\n\timagePreviewQuality: number = 0.92;\n\timagePreviewMimeType: string = 'image/jpeg';\n\timagePreviewUpscale: boolean = false;\n\timagePreviewResizeMethod: string = 'contain';\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\t\tconst integerOptions = [\n\t\t\t'imagePreviewWidth',\n\t\t\t'imagePreviewHeight',\n\t\t\t'imagePreviewQuality',\n\t\t];\n\n\t\tintegerOptions.forEach(option => {\n\t\t\tthis[option] = Type.isNumber(options[option]) && options[option] > 0 ? options[option] : this[option];\n\t\t});\n\n\t\tif (Type.isBoolean(options['imagePreviewUpscale']))\n\t\t{\n\t\t\tthis.imagePreviewUpscale = options['imagePreviewUpscale'];\n\t\t}\n\n\t\tif (['contain', 'force', 'cover'].includes(options['imagePreviewResizeMethod']))\n\t\t{\n\t\t\tthis.imagePreviewResizeMethod = options['imagePreviewResizeMethod'];\n\t\t}\n\n\t\tif (['image/jpeg', 'image/png'].includes(options['imagePreviewMimeType']))\n\t\t{\n\t\t\tthis.imagePreviewMimeType = options['imagePreviewMimeType'];\n\t\t}\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!isResizableImage(file.getFile()))\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst options = {\n\t\t\t\twidth: this.imagePreviewWidth,\n\t\t\t\theight: this.imagePreviewHeight,\n\t\t\t\tmode: this.imagePreviewResizeMethod,\n\t\t\t\tupscale: this.imagePreviewUpscale,\n\t\t\t\tquality: this.imagePreviewQuality,\n\t\t\t\tmimeType: this.imagePreviewMimeType,\n\t\t\t};\n\n\t\t\tresizeImage(file.getFile(), options)\n\t\t\t\t.then(({ preview, width, height }) => {\n\n\t\t\t\t\t//setTimeout(() => {\n\t\t\t\t\t\tfile.setClientPreview(preview, width, height);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t//}, 60000);\n\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import { Type } from 'main.core';\nimport Filter from './filter';\n\nimport isResizableImage from '../helpers/is-resizable-image';\nimport resizeImage from '../helpers/resize-image';\n\nimport type Uploader from '../uploader';\n\nexport default class TransformImageFilter extends Filter\n{\n\tresizeWidth: number = null;\n\tresizeHeight: number = null;\n\tresizeMethod: string = 'contain';\n\tresizeMimeType: string = 'image/jpeg';\n\tresizeQuality: number = 0.92;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\t\tif (Type.isNumber(options['imageResizeWidth']) && options['imageResizeWidth'] > 0)\n\t\t{\n\t\t\tthis.resizeWidth = options['imageResizeWidth'];\n\t\t}\n\n\t\tif (Type.isNumber(options['imageResizeHeight']) && options['imageResizeHeight'] > 0)\n\t\t{\n\t\t\tthis.resizeHeight = options['imageResizeHeight'];\n\t\t}\n\n\t\tif (['contain', 'force', 'cover'].includes(options['imageResizeMethod']))\n\t\t{\n\t\t\tthis.resizeMethod = options['imageResizeMethod'];\n\t\t}\n\n\t\tif (Type.isNumber(options['imageResizeQuality']))\n\t\t{\n\t\t\tthis.resizeQuality = Math.min(Math.max(0.1, options['imageResizeQuality']), 1);\n\t\t}\n\n\t\tif (['image/jpeg', 'image/png'].includes(options['imageResizeMimeType']))\n\t\t{\n\t\t\tthis.resizeMimeType = options['imageResizeMimeType'];\n\t\t}\n\t}\n\n\tapply(file: File): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!isResizableImage(file))\n\t\t\t{\n\t\t\t\treturn resolve(file);\n\t\t\t}\n\n\t\t\tif (this.resizeWidth === null && this.resizeHeight === null)\n\t\t\t{\n\t\t\t\treturn resolve(file);\n\t\t\t}\n\n\t\t\tconst options = {\n\t\t\t\twidth: this.resizeWidth,\n\t\t\t\theight: this.resizeHeight,\n\t\t\t\tmode: this.resizeMethod,\n\t\t\t\tquality: this.resizeQuality,\n\t\t\t\tmimeType: this.resizeMimeType,\n\t\t\t};\n\n\t\t\tresizeImage(file, options)\n\t\t\t\t.then(({ preview }) => {\n\t\t\t\t\tresolve(preview);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(file);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","export const UploaderStatus = {\n\tSTARTED: 0,\n\tSTOPPED: 1,\n};","export const FilterType = {\n\tVALIDATION: 'validation',\n\tPREPARATION: 'preparation',\n};","const getFilesFromDataTransfer = (dataTransfer: DataTransfer) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (!dataTransfer.items)\n\t\t{\n\t\t\tresolve(dataTransfer.files ? Array.from(dataTransfer.files) : []);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = Array.from(dataTransfer.items)\n\t\t\t.filter(item => isFileSystemItem(item))\n\t\t\t.map(item => getFilesFromItem(item))\n\t\t;\n\n\t\tPromise.all(items)\n\t\t\t.then((fileGroups: Array<File[]>) => {\n\t\t\t\tconst files = [];\n\t\t\t\tfileGroups.forEach((group: File[]) => {\n\t\t\t\t\tfiles.push.apply(files, group);\n\t\t\t\t});\n\n\t\t\t\tresolve(files);\n\t\t\t})\n\t\t\t.catch(reject)\n\t\t;\n\t});\n};\n\nexport default getFilesFromDataTransfer;\n\nconst isFileSystemItem = (item: DataTransferItem) => {\n\tif ('webkitGetAsEntry' in item)\n\t{\n\t\tconst entry = item.webkitGetAsEntry();\n\t\tif (entry)\n\t\t{\n\t\t\treturn entry.isFile || entry.isDirectory;\n\t\t}\n\t}\n\n\treturn item.kind === 'file';\n};\n\nconst getFilesFromItem = (item: DataTransferItem) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (isDirectoryEntry(item))\n\t\t{\n\t\t\tgetFilesInDirectory(getAsEntry(item))\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t\t;\n\n\t\t\treturn;\n\t\t}\n\n\t\tresolve([item.getAsFile()]);\n\t});\n};\n\nconst getFilesInDirectory = entry => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst files = [];\n\t\tlet dirCounter = 0;\n\t\tlet fileCounter = 0;\n\n\t\tconst resolveIfDone = () => {\n\t\t\tif (fileCounter === 0 && dirCounter === 0)\n\t\t\t{\n\t\t\t\tresolve(files);\n\t\t\t}\n\t\t};\n\n\t\tconst readEntries = dirEntry => {\n\t\t\tdirCounter++;\n\t\t\tconst directoryReader = dirEntry.createReader();\n\t\t\tconst readBatch = () => {\n\t\t\t\tdirectoryReader.readEntries(entries => {\n\t\t\t\t\tif (entries.length === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdirCounter--;\n\t\t\t\t\t\tresolveIfDone();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tentries.forEach(entry => {\n\t\t\t\t\t\tif (entry.isDirectory)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treadEntries(entry);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileCounter++;\n\t\t\t\t\t\t\tentry.file(file => {\n\t\t\t\t\t\t\t\tfiles.push(file);\n\t\t\t\t\t\t\t\tfileCounter--;\n\t\t\t\t\t\t\t\tresolveIfDone();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treadBatch();\n\t\t\t\t}, reject);\n\t\t\t};\n\n\t\t\treadBatch();\n\t\t};\n\n\t\treadEntries(entry);\n\t});\n};\n\nconst isDirectoryEntry = item => isEntry(item) && (getAsEntry(item) || {}).isDirectory;\nconst isEntry = item => 'webkitGetAsEntry' in item;\nconst getAsEntry = item => item.webkitGetAsEntry();","let result = null;\n\nconst canAppendFileToForm = () => {\n\tif (result === null)\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst dataTransfer = new DataTransfer();\n\t\t\tconst file = new File(['hello'], 'my.txt');\n\t\t\tdataTransfer.items.add(file);\n\n\t\t\tconst input = document.createElement('input');\n\t\t\tinput.setAttribute('type', 'file');\n\t\t\tinput.files = dataTransfer.files;\n\n\t\t\tresult = input.files.length === 1;\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\tresult = false;\n\t\t}\n\t}\n\n\treturn result;\n};\n\nexport default canAppendFileToForm;","import { Type } from 'main.core';\n\nconst assignFileToInput = (input: HTMLInputElement, file: File | File[]) => {\n\ttry\n\t{\n\t\tconst dataTransfer = new DataTransfer();\n\t\tconst files = Type.isArray(file) ? file : [file];\n\n\t\tfiles.forEach(file => {\n\t\t\tdataTransfer.items.add(file);\n\t\t});\n\n\t\tinput.files = dataTransfer.files;\n\t}\n\tcatch (error)\n\t{\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nexport default assignFileToInput;","import { Type, Event, Reflection, Dom, Extension } from 'main.core';\nimport { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport UploaderFile from './uploader-file';\nimport UploaderError from './uploader-error';\nimport Server from './backend/server';\n\nimport Filter from './filters/filter';\nimport FileSizeFilter from './filters/file-size-filter';\nimport FileTypeFilter from './filters/file-type-filter';\nimport ImageSizeFilter from './filters/image-size-filter';\nimport ImagePreviewFilter from './filters/image-preview-filter';\nimport TransformImageFilter from './filters/transform-image-filter';\n\nimport { FileStatus } from './enums/file-status';\nimport { UploaderStatus } from './enums/uploader-status';\nimport { FileOrigin } from './enums/file-origin';\nimport { FilterType } from './enums/filter-type';\n\nimport getFilesFromDataTransfer from './helpers/get-files-from-data-transfer';\nimport canAppendFileToForm from './helpers/can-append-file-to-form';\nimport assignFileToInput from './helpers/assign-file-to-input';\n\nimport type { UploaderOptions } from './types/uploader-options';\nimport type { UploaderFileOptions } from './types/uploader-file-options';\n\nexport default class Uploader extends EventEmitter\n{\n\tfiles: UploaderFile[] = [];\n\tmultiple: boolean = false;\n\tautoUpload: boolean = true;\n\tallowReplaceSingle: boolean = true;\n\tmaxParallelUploads: number = 2;\n\tmaxParallelLoads: number = 10;\n\tacceptOnlyImages: boolean = false;\n\tacceptedFileTypes: string[] = [];\n\tignoredFileNames: string[] = ['.ds_store', 'thumbs.db', 'desktop.ini'];\n\tmaxFileCount: ?number = null;\n\tserver: Server = null;\n\n\thiddenFields: Map<string, HTMLInputElement> = new Map();\n\thiddenFieldsContainer: HTMLElement = null;\n\thiddenFieldName: string = 'file';\n\tassignAsFile: boolean = false;\n\n\tfilters: Map<FilterType, Filter[]> = new Map();\n\tstatus: UploaderStatus = UploaderStatus.STOPPED;\n\n\tconstructor(uploaderOptions: UploaderOptions)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader');\n\n\t\tconst options = Type.isPlainObject(uploaderOptions) ? Object.assign({}, uploaderOptions) : {};\n\n\t\tthis.multiple = Type.isBoolean(options.multiple) ? options.multiple : false;\n\t\tthis.acceptOnlyImages = Type.isBoolean(options.acceptOnlyImages) ? options.acceptOnlyImages : false;\n\n\t\tthis.setAutoUpload(options.autoUpload);\n\t\tthis.setMaxParallelUploads(options.maxParallelUploads);\n\t\tthis.setMaxParallelLoads(options.maxParallelLoads);\n\n\t\tif (this.acceptOnlyImages)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tconst imageExtensions = settings.get('imageExtensions', 'jpg,bmp,jpeg,jpe,gif,png,webp');\n\t\t\tthis.setAcceptedFileTypes(imageExtensions);\n\t\t}\n\n\t\tthis.setAcceptedFileTypes(options.acceptedFileTypes);\n\t\tthis.setIgnoredFileNames(options.ignoredFileNames);\n\t\tthis.setMaxFileCount(options.maxFileCount);\n\t\tthis.setAllowReplaceSingle(options.allowReplaceSingle);\n\n\t\tthis.assignBrowse(options.browseElement);\n\t\tthis.assignDropzone(options.dropElement);\n\t\tthis.assignPaste(options.pasteElement);\n\n\t\tthis.setHiddenFieldsContainer(options.hiddenFieldsContainer);\n\t\tthis.setHiddenFieldName(options.hiddenFieldName);\n\t\tthis.setAssignAsFile(options.assignAsFile);\n\n\t\tlet serverOptions = Type.isPlainObject(options.serverOptions) ? options.serverOptions : {};\n\t\tserverOptions = Object.assign(\n\t\t\t{},\n\t\t\t{ controller: options.controller, controllerOptions: options.controllerOptions },\n\t\t\tserverOptions\n\t\t);\n\n\t\tthis.server = new Server(serverOptions);\n\n\t\tthis.subscribeFromOptions(options.events);\n\n\t\tthis.addFilter(FilterType.VALIDATION, new FileSizeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new FileTypeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new ImageSizeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new ImagePreviewFilter(this, options));\n\t\tthis.addFilter(FilterType.PREPARATION, new TransformImageFilter(this, options));\n\t\tthis.addFilters(options.filters);\n\n\t\tthis.handleBeforeUpload = this.handleBeforeUpload.bind(this);\n\t\tthis.handlePrepareFileAsync = this.handlePrepareFileAsync.bind(this);\n\t\tthis.handleUploadStart = this.handleBeforeUpload.bind(this);\n\t\tthis.handleFileCancel = this.handleFileCancel.bind(this);\n\t\tthis.handleFileStatusChange = this.handleFileStatusChange.bind(this);\n\t\tthis.handleFileStateChange = this.handleFileStateChange.bind(this);\n\n\t\tthis.addFiles(options.files);\n\t}\n\n\taddFiles(fileList: ArrayLike): void\n\t{\n\t\tif (!Type.isArrayLike(fileList))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst files = Array.from(fileList);\n\t\tif (this.#exceedsMaxFileCount(files))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tfiles.forEach(file => {\n\t\t\tif (Type.isArrayFilled(file))\n\t\t\t{\n\t\t\t\tthis.addFile(file[0], file[1]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addFile(file);\n\t\t\t}\n\t\t});\n\t}\n\n\taddFile(source: File | Blob | string | number, options: UploaderFileOptions)\n\t{\n\t\tconst file = new UploaderFile(source, options);\n\n\t\tif (this.getIgnoredFileNames().includes(file.getName().toLowerCase()))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#exceedsMaxFileCount([file]))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.isMultiple() && this.shouldReplaceSingle() && this.getFiles().length > 0)\n\t\t{\n\t\t\tconst fileToReplace: UploaderFile = this.getFiles()[0];\n\t\t\tthis.removeFile(fileToReplace);\n\t\t}\n\n\t\tconst event = new BaseEvent({ data: { file: file } });\n\t\tthis.emit('File:onBeforeAdd', event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#setLoadController(file);\n\t\tthis.#setUploadController(file);\n\n\t\tthis.files.push(file);\n\t\tfile.setStatus(FileStatus.ADDED);\n\n\t\tthis.emit('File:onAddStart', { file });\n\n\t\tfile.subscribe('onBeforeUpload', this.handleBeforeUpload);\n\t\tfile.subscribe('onPrepareFileAsync', this.handlePrepareFileAsync);\n\t\tfile.subscribe('onUploadStart', this.handleUploadStart);\n\t\tfile.subscribe('onCancel', this.handleFileCancel);\n\t\tfile.subscribe('onStatusChange', this.handleFileStatusChange);\n\t\tfile.subscribe('onStateChange', this.handleFileStateChange);\n\n\t\tif (file.getOrigin() === FileOrigin.SERVER)\n\t\t{\n\t\t\tfile.load();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.#loadNext();\n\t\t}\n\t}\n\n\t#setLoadController(file: UploaderFile): void\n\t{\n\t\tconst loadController =\n\t\t\tfile.getOrigin() === FileOrigin.SERVER\n\t\t\t\t? this.getServer().createLoadController()\n\t\t\t\t: this.getServer().createClientLoadController()\n\t\t;\n\n\t\tloadController.subscribeFromOptions({\n\t\t\t'onError': (event: BaseEvent) => {\n\t\t\t\tconst { error } = event.getData();\n\t\t\t\tfile.addError(error);\n\t\t\t\tfile.setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\tthis.emit('File:onError', { file, error });\n\n\t\t\t\tthis.#loadNext();\n\t\t\t},\n\t\t\t'onAbort': (event: BaseEvent) => {\n\t\t\t\tif (file.getOrigin() === FileOrigin.SERVER)\n\t\t\t\t{\n\t\t\t\t\tfile.setStatus(FileStatus.ABORTED);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfile.setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\t}\n\n\t\t\t\tthis.emit('File:onAbort', { file });\n\t\t\t\tthis.#loadNext();\n\t\t\t},\n\t\t\t'onProgress': (event: BaseEvent) => {\n\t\t\t\tthis.emit('File:onLoadProgress', { file, progress: event.getData().progress });\n\t\t\t},\n\t\t\t'onLoad': (event: BaseEvent) => {\n\t\t\t\tif (file.getOrigin() === FileOrigin.SERVER)\n\t\t\t\t{\n\t\t\t\t\tfile.setFile(event.getData().fileInfo);\n\t\t\t\t\tfile.setStatus(FileStatus.COMPLETE);\n\t\t\t\t\tthis.emit('File:onAdd', { file });\n\t\t\t\t\tthis.emit('File:onLoadComplete', { file });\n\t\t\t\t\tthis.emit('File:onComplete', { file });\n\n\t\t\t\t\tthis.#setHiddenField(file);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Validation\n\t\t\t\tthis.#applyFilters(FilterType.VALIDATION, file)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tif (file.isUploadable())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfile.setStatus(FileStatus.PENDING);\n\t\t\t\t\t\t\tthis.emit('File:onAdd', { file });\n\t\t\t\t\t\t\tthis.emit('File:onLoadComplete', { file });\n\n\t\t\t\t\t\t\tif (this.shouldAutoUpload())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfile.upload();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfile.setStatus(FileStatus.COMPLETE);\n\t\t\t\t\t\t\tthis.emit('File:onAdd', { file });\n\t\t\t\t\t\t\tthis.emit('File:onLoadComplete', { file });\n\t\t\t\t\t\t\tthis.emit('File:onComplete', { file });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.#loadNext();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tfile.addError(error);\n\t\t\t\t\t\tfile.setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\t\t\tthis.emit('File:onError', { file, error });\n\t\t\t\t\t\tthis.emit('File:onAdd', { file, error });\n\t\t\t\t\t\tthis.#loadNext();\n\t\t\t\t\t})\n\t\t\t\t;\n\t\t\t},\n\t\t});\n\n\t\tfile.setLoadController(loadController);\n\t}\n\n\t#setUploadController(file: UploaderFile): void\n\t{\n\t\tconst uploadController = this.getServer().createUploadController();\n\t\tif (!uploadController)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tuploadController.subscribeFromOptions({\n\t\t\t'onError': (event: BaseEvent) => {\n\t\t\t\tconst { error } = event.getData();\n\t\t\t\tfile.addError(error);\n\t\t\t\tfile.setStatus(FileStatus.UPLOAD_FAILED);\n\t\t\t\tthis.emit('File:onError', { file, error });\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t\t'onAbort': (event: BaseEvent) => {\n\t\t\t\tfile.setStatus(FileStatus.ABORTED);\n\t\t\t\tthis.emit('File:onAbort', { file });\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t\t'onProgress': (event: BaseEvent) => {\n\t\t\t\tconst { progress } = event.getData();\n\t\t\t\tfile.setProgress(progress);\n\t\t\t\tthis.emit('File:onUploadProgress', { file, progress });\n\t\t\t},\n\t\t\t'onUpload': (event: BaseEvent) => {\n\t\t\t\tfile.setStatus(FileStatus.COMPLETE);\n\t\t\t\tfile.setFile(event.getData().fileInfo);\n\t\t\t\tthis.emit('File:onUploadComplete', { file });\n\t\t\t\tthis.emit('File:onComplete', { file });\n\n\t\t\t\tthis.#setHiddenField(file);\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t});\n\n\t\tfile.setUploadController(uploadController);\n\t}\n\n\t#exceedsMaxFileCount(fileList: Array): boolean\n\t{\n\t\tconst totalNewFiles = fileList.length;\n\t\tconst totalFiles = this.getFiles().length;\n\n\t\tif (!this.isMultiple() && totalNewFiles > 1)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tlet maxFileCount;\n\t\tif (this.isMultiple())\n\t\t{\n\t\t\tmaxFileCount = this.getMaxFileCount();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxFileCount = this.shouldReplaceSingle() ? null : 1;\n\t\t}\n\n\t\tif (maxFileCount !== null && totalFiles + totalNewFiles > maxFileCount)\n\t\t{\n\t\t\tconst error = new UploaderError('MAX_FILE_COUNT_EXCEEDED', { maxFileCount });\n\t\t\tthis.emit('onMaxFileCountExceeded', { error });\n\t\t\tthis.emit('onError', { error });\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t#applyFilters(type: FilterType, ...args): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst filters = [...(this.filters.get(type) || [])];\n\t\t\tif (filters.length === 0)\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst firstFilter: Filter = filters.shift();\n\n\t\t\t// chain filters\n\t\t\tfilters\n\t\t\t\t.reduce(\n\t\t\t\t\t(current: Promise, next: Filter) => {\n\t\t\t\t\t\treturn current.then(() => next.apply(...args));\n\t\t\t\t\t},\n\t\t\t\t\tfirstFilter.apply(...args)\n\t\t\t\t)\n\t\t\t\t.then((result) => resolve(result))\n\t\t\t\t.catch(error => reject(error))\n\t\t\t;\n\t\t});\n\t}\n\n\tstart(): void\n\t{\n\t\tif (this.getStatus() !== UploaderStatus.STARTED && this.getPendingFileCount() > 0)\n\t\t{\n\t\t\tthis.status = UploaderStatus.STARTED;\n\t\t\tthis.emit('onUploadStart');\n\t\t\tthis.#uploadNext();\n\t\t}\n\t}\n\n\tstop(): void\n\t{\n\t\tthis.status = UploaderStatus.STOPPED;\n\n\t\tthis.getFiles().forEach((file: UploaderFile) => {\n\t\t\tif (file.isUploading())\n\t\t\t{\n\t\t\t\tfile.abort();\n\t\t\t\tfile.setStatus(FileStatus.PENDING);\n\t\t\t}\n\t\t});\n\n\t\tthis.emit('onStop');\n\t}\n\n\tcancel(): void\n\t{\n\t\tthis.getFiles().forEach((file: UploaderFile) => {\n\t\t\tfile.cancel();\n\t\t});\n\t}\n\n\tdestroy(): void\n\t{\n\t\tthis.emit('onDestroy');\n\n\t\t// TODO\n\t\t// unassignBrowse\n\t\t// unassignDrop\n\n\t\tthis.getFiles().forEach((file: UploaderFile) => {\n\t\t\tfile.cancel();\n\t\t});\n\n\t\tfor (const property in this)\n\t\t{\n\t\t\tif (this.hasOwnProperty(property))\n\t\t\t{\n\t\t\t\tdelete this[property];\n\t\t\t}\n\t\t}\n\n\t\tObject.setPrototypeOf(this, null);\n\t}\n\n\tremoveFile(file: UploaderFile | string): void\n\t{\n\t\tif (Type.isString(file))\n\t\t{\n\t\t\tfile = this.getFile(file);\n\t\t}\n\n\t\tconst index = this.files.findIndex(element => element === file);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tthis.files.splice(index, 1);\n\n\t\t\tfile.abort();\n\t\t\tfile.setStatus(FileStatus.INIT);\n\t\t\tthis.emit('File:onRemove', { file });\n\n\t\t\tthis.#resetHiddenField(file);\n\t\t}\n\t}\n\n\tgetFile(id: string): ?UploaderFile\n\t{\n\t\treturn this.getFiles().find((file: UploaderFile) => file.getId() === id) || null;\n\t}\n\n\tgetFiles(): UploaderFile[]\n\t{\n\t\treturn this.files;\n\t}\n\n\tisMultiple(): boolean\n\t{\n\t\treturn this.multiple;\n\t}\n\n\tgetStatus(): UploaderStatus\n\t{\n\t\treturn this.status;\n\t}\n\n\taddFilter(type: FilterType, filter: Filter | Function | string, filterOptions: { [key: string]: any } = {}): void\n\t{\n\t\tif (Type.isFunction(filter) || Type.isString(filter))\n\t\t{\n\t\t\tconst className = Type.isString(filter) ? Reflection.getClass(filter) : filter;\n\t\t\tif (Type.isFunction(className))\n\t\t\t{\n\t\t\t\tfilter = new className(this, filterOptions);\n\t\t\t}\n\t\t}\n\n\t\tif (filter instanceof Filter)\n\t\t{\n\t\t\tlet filters = this.filters.get(type);\n\t\t\tif (!Type.isArray(filters))\n\t\t\t{\n\t\t\t\tfilters = [];\n\t\t\t\tthis.filters.set(type, filters);\n\t\t\t}\n\n\t\t\tfilters.push(filter);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new Error('Uploader: a filter must be an instance of FileUploader.Filter.');\n\t\t}\n\t}\n\n\taddFilters(filters: Array): void\n\t{\n\t\tif (Type.isArray(filters))\n\t\t{\n\t\t\tfilters.forEach(filter => {\n\t\t\t\tif (Type.isPlainObject(filter))\n\t\t\t\t{\n\t\t\t\t\tthis.addFilter(filter.type, filter.filter, filter.options);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.server;\n\t}\n\n\tassignBrowse(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement | HTMLInputElement) => {\n\t\t\tif (!Type.isElementNode(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet input: HTMLInputElement = null;\n\t\t\tif (node.tagName === 'INPUT' && node.type === 'file')\n\t\t\t{\n\t\t\t\tinput = node;\n\n\t\t\t\t// Add already selected files\n\t\t\t\tif (input.files)\n\t\t\t\t{\n\t\t\t\t\tthis.addFiles(input.files);\n\t\t\t\t}\n\n\t\t\t\tconst acceptAttr = input.getAttribute('accept');\n\t\t\t\tif (Type.isStringFilled(acceptAttr))\n\t\t\t\t{\n\t\t\t\t\tthis.setAcceptedFileTypes(acceptAttr);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinput = document.createElement('input');\n\t\t\t\tinput.setAttribute('type', 'file');\n\n\t\t\t\tEvent.bind(node, 'click', () => {\n\t\t\t\t\tinput.click();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this.isMultiple())\n\t\t\t{\n\t\t\t\tinput.setAttribute('multiple', 'multiple');\n\t\t\t}\n\n\t\t\tif (Type.isArrayFilled(this.getAcceptedFileTypes()))\n\t\t\t{\n\t\t\t\tinput.setAttribute('accept', this.getAcceptedFileTypes().join(','));\n\t\t\t}\n\n\t\t\tEvent.bind(input, 'change', () => {\n\t\t\t\tthis.addFiles(Array.from(input.files));\n\n\t\t\t\t// reset file input\n\t\t\t\tinput.value = '';\n\t\t\t});\n\t\t});\n\t}\n\n\tassignDropzone(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement) => {\n\t\t\tif (!Type.isElementNode(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEvent.bind(node, 'dragover', (event: DragEvent) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\n\t\t\tEvent.bind(node, 'dragenter', (event: DragEvent) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\n\t\t\tEvent.bind(node, 'drop', (event: DragEvent) => {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tgetFilesFromDataTransfer(event.dataTransfer).then((files: File[]) => {\n\t\t\t\t\tthis.addFiles(files);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tassignPaste(nodes: HTMLElement | HTMLElement[]): void\n\t{\n\t\tnodes = Type.isElementNode(nodes) ? [nodes] : nodes;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement) => {\n\t\t\tif (!Type.isElementNode(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEvent.bind(node, 'paste', (event: ClipboardEvent) => {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tconst clipboardData: DataTransfer = event.clipboardData;\n\t\t\t\tif (!clipboardData)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tgetFilesFromDataTransfer(clipboardData).then((files: File[]) => {\n\t\t\t\t\tthis.addFiles(files);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tgetHiddenFieldsContainer(): ?HTMLElement\n\t{\n\t\tlet element = null;\n\t\tif (Type.isStringFilled(this.hiddenFieldsContainer))\n\t\t{\n\t\t\telement = document.querySelector(this.hiddenFieldsContainer);\n\t\t}\n\t\telse if (Type.isElementNode(this.hiddenFieldsContainer))\n\t\t{\n\t\t\telement = this.hiddenFieldsContainer;\n\t\t}\n\n\t\treturn element;\n\t}\n\n\tsetHiddenFieldsContainer(container: string | HTMLElement): void\n\t{\n\t\tif (Type.isStringFilled(container) || Type.isElementNode(container) || Type.isNull(container))\n\t\t{\n\t\t\tthis.hiddenFieldsContainer = container;\n\t\t}\n\t}\n\n\tgetHiddenFieldName(): string\n\t{\n\t\treturn this.hiddenFieldName;\n\t}\n\n\tsetHiddenFieldName(name: string)\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.hiddenFieldName = name;\n\t\t}\n\t}\n\n\tshouldAssignAsFile(): boolean\n\t{\n\t\treturn this.assignAsFile;\n\t}\n\n\tsetAssignAsFile(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.assignAsFile = flag;\n\t\t}\n\t}\n\n\tgetTotalSize(): number\n\t{\n\t\treturn this.getFiles().reduce((totalSize: number, file: UploaderFile) => {\n\t\t\treturn totalSize + file.getSize();\n\t\t}, 0);\n\t}\n\n\tshouldAutoUpload(): boolean\n\t{\n\t\treturn this.autoUpload;\n\t}\n\n\tsetAutoUpload(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.autoUpload = flag;\n\t\t}\n\t}\n\n\tgetMaxParallelUploads(): number\n\t{\n\t\treturn this.maxParallelUploads;\n\t}\n\n\tsetMaxParallelUploads(number: number): void\n\t{\n\t\tif (Type.isNumber(number) && number > 0)\n\t\t{\n\t\t\tthis.maxParallelUploads = number;\n\t\t}\n\t}\n\n\tgetMaxParallelLoads(): number\n\t{\n\t\treturn this.maxParallelLoads;\n\t}\n\n\tsetMaxParallelLoads(number: number): void\n\t{\n\t\tif (Type.isNumber(number) && number > 0)\n\t\t{\n\t\t\tthis.maxParallelLoads = number;\n\t\t}\n\t}\n\n\tgetUploadingFileCount(): number\n\t{\n\t\treturn this.getFiles().filter(file => file.isUploading()).length;\n\t}\n\n\tgetPendingFileCount(): number\n\t{\n\t\treturn this.getFiles().filter(file => file.isReadyToUpload()).length;\n\t}\n\n\tshouldAcceptOnlyImages(): boolean\n\t{\n\t\treturn this.acceptOnlyImages;\n\t}\n\n\tgetAcceptedFileTypes(): string[]\n\t{\n\t\treturn this.acceptedFileTypes;\n\t}\n\n\tsetAcceptedFileTypes(fileTypes: string | string[]): void\n\t{\n\t\tif (Type.isString(fileTypes))\n\t\t{\n\t\t\tfileTypes = fileTypes.split(',');\n\t\t}\n\n\t\tif (Type.isArray(fileTypes))\n\t\t{\n\t\t\tthis.acceptedFileTypes = [];\n\n\t\t\tfileTypes.forEach(type => {\n\t\t\t\tif (Type.isStringFilled(type))\n\t\t\t\t{\n\t\t\t\t\tthis.acceptedFileTypes.push(type);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetIgnoredFileNames(): string[]\n\t{\n\t\treturn this.ignoredFileNames;\n\t}\n\n\tsetIgnoredFileNames(fileNames: string[]): void\n\t{\n\t\tif (Type.isArray(fileNames))\n\t\t{\n\t\t\tthis.ignoredFileNames = [];\n\n\t\t\tfileNames.forEach(fileName => {\n\t\t\t\tif (Type.isStringFilled(fileName))\n\t\t\t\t{\n\t\t\t\t\tthis.ignoredFileNames.push(fileName.toLowerCase());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsetMaxFileCount(maxFileCount: ?number): void\n\t{\n\t\tif ((Type.isNumber(maxFileCount) && maxFileCount > 0) || maxFileCount === null)\n\t\t{\n\t\t\tthis.maxFileCount = maxFileCount;\n\t\t}\n\t}\n\n\tgetMaxFileCount(): ?number\n\t{\n\t\treturn this.maxFileCount;\n\t}\n\n\tsetAllowReplaceSingle(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.allowReplaceSingle = flag;\n\t\t}\n\t}\n\n\tshouldReplaceSingle(): boolean\n\t{\n\t\treturn this.allowReplaceSingle;\n\t}\n\n\t#uploadNext(): void\n\t{\n\t\tif (this.getStatus() !== UploaderStatus.STARTED)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst maxParallelUploads = this.getMaxParallelUploads();\n\t\tconst currentUploads = this.getUploadingFileCount();\n\t\tconst pendingFiles = this.getFiles().filter(file => file.isReadyToUpload());\n\t\tconst pendingUploads = pendingFiles.length;\n\n\t\tif (currentUploads < maxParallelUploads)\n\t\t{\n\t\t\tconst limit = Math.min(maxParallelUploads - currentUploads, pendingFiles.length);\n\t\t\tfor (let i = 0; i < limit; i++)\n\t\t\t{\n\t\t\t\tconst pendingFile = pendingFiles[i];\n\t\t\t\tpendingFile.upload();\n\t\t\t}\n\t\t}\n\n\t\t// All files are COMPLETE or FAILED\n\t\tif (currentUploads === 0 && pendingUploads === 0)\n\t\t{\n\t\t\tthis.status = UploaderStatus.STOPPED;\n\t\t\tthis.emit('onUploadComplete');\n\t\t}\n\t}\n\n\t#loadNext(): void\n\t{\n\t\tconst maxParallelLoads = this.getMaxParallelLoads();\n\t\tconst currentLoads = this.getFiles().filter(file => file.isLoading()).length;\n\t\tconst pendingFiles = this.getFiles().filter(file => {\n\t\t\treturn file.getStatus() === FileStatus.ADDED && file.getOrigin() === FileOrigin.CLIENT;\n\t\t});\n\n\t\tif (currentLoads < maxParallelLoads)\n\t\t{\n\t\t\tconst limit = Math.min(maxParallelLoads - currentLoads, pendingFiles.length);\n\t\t\tfor (let i = 0; i < limit; i++)\n\t\t\t{\n\t\t\t\tconst pendingFile = pendingFiles[i];\n\t\t\t\tpendingFile.load();\n\t\t\t}\n\t\t}\n\t}\n\n\thandleBeforeUpload(event: BaseEvent): void\n\t{\n\t\tif (this.getStatus() === UploaderStatus.STOPPED)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.start();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.getUploadingFileCount() >= this.getMaxParallelUploads())\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t}\n\n\thandlePrepareFileAsync(event: BaseEvent): void\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#applyFilters(FilterType.PREPARATION, file)\n\t\t\t\t.then((transformedFile: File) => {\n\t\t\t\t\tif (Type.isFile(transformedFile))\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(transformedFile);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(file);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => reject(error))\n\t\t\t;\n\t\t});\n\t}\n\n\thandleUploadStart(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onUploadStart', { file });\n\t}\n\n\thandleFileCancel(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onCancel', { file });\n\n\t\tthis.removeFile(file);\n\t}\n\n\thandleFileStatusChange(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onStatusChange', { file });\n\t}\n\n\thandleFileStateChange(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit('File:onStateChange', { file });\n\t}\n\n\t#setHiddenField(file: UploaderFile): void\n\t{\n\t\tconst container = this.getHiddenFieldsContainer();\n\t\tif (!container || this.hiddenFields.has(file.getId()))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: is it needed?\n\t\tconst isExistingServerFile = Type.isNumber(file.getServerId());\n\t\tif (isExistingServerFile)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst assignAsFile =\n\t\t\tfile.getOrigin() === FileOrigin.CLIENT\n\t\t\t&& !file.isUploadable()\n\t\t\t&& this.shouldAssignAsFile()\n\t\t\t&& canAppendFileToForm()\n\t\t;\n\n\t\tconst input = document.createElement('input');\n\t\tinput.type = assignAsFile ? 'file' : 'hidden';\n\t\tinput.name = this.getHiddenFieldName() + (this.isMultiple() ? '[]' : '');\n\n\t\tif (assignAsFile)\n\t\t{\n\t\t\tDom.style(input, {\n\t\t\t\tvisibility: 'hidden',\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tposition: 'absolute',\n\t\t\t\t'pointer-events': 'none',\n\t\t\t});\n\n\t\t\tassignFileToInput(input, file.getFile());\n\t\t}\n\t\telse if (file.getServerId() !== null)\n\t\t{\n\t\t\tinput.value = file.getServerId();\n\t\t}\n\n\t\tcontainer.appendChild(input);\n\t\tthis.hiddenFields.set(file.getId(), input);\n\n\t\tthis.#syncInputPositions();\n\t}\n\n\t#resetHiddenField(file: UploaderFile): void\n\t{\n\t\tconst input = this.hiddenFields.get(file.getId());\n\t\tif (input)\n\t\t{\n\t\t\tDom.remove(input);\n\t\t\tthis.hiddenFields.delete(file.getId());\n\t\t}\n\t}\n\n\t#syncInputPositions(): void\n\t{\n\t\tconst container = this.getHiddenFieldsContainer();\n\t\tif (!container)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.getFiles().forEach((file: UploaderFile) => {\n\t\t\tconst input = this.hiddenFields.get(file.getId());\n\t\t\tif (input)\n\t\t\t{\n\t\t\t\tcontainer.appendChild(input);\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Type } from 'main.core';\nimport { EventEmitter, BaseEvent } from 'main.core.events';\nimport { Uploader, UploaderFile, UploaderOptions } from 'ui.uploader.core';\nimport { ref, shallowRef, VueRefValue } from 'ui.vue3';\n\n/**\n * @memberof BX.UI.Uploader\n */\nexport default class VueAdapter extends EventEmitter\n{\n\t#uploader: Uploader = null;\n\t#items: VueRefValue<Array> = null;\n\t#uploaderError = null;\n\n\tconstructor(uploaderOptions: UploaderOptions)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.Vue.Adapter');\n\n\t\tthis.#items = ref([]);\n\t\tthis.#uploaderError = shallowRef(null);\n\n\t\tconst options = Type.isPlainObject(uploaderOptions) ? Object.assign({}, uploaderOptions) : {};\n\t\tconst userEvents = options.events;\n\t\toptions.events = {\n\t\t\t'File:onAddStart': this.#handleFileAdd.bind(this),\n\t\t\t'File:onRemove': this.#handleFileRemove.bind(this),\n\t\t\t'File:onStateChange': this.#handleFileStateChange.bind(this),\n\t\t\t'onError': this.#handleError.bind(this),\n\t\t\t'onUploadStart': this.#handleUploadStart.bind(this),\n\t\t\t'onUploadComplete': this.#handleUploadComplete.bind(this),\n\t\t};\n\n\t\tthis.#uploader = new Uploader(options);\n\t\tthis.#uploader.subscribeFromOptions(userEvents);\n\t}\n\n\tgetUploader(): Uploader\n\t{\n\t\treturn this.#uploader;\n\t}\n\n\tgetItems(): VueRefValue<Array>\n\t{\n\t\treturn this.#items;\n\t}\n\n\tgetUploaderError(): VueRefValue<Object>\n\t{\n\t\treturn this.#uploaderError;\n\t}\n\n\t#getItemsArray(): Array\n\t{\n\t\treturn this.#items.value;\n\t}\n\n\t#getItem(id): { [key: string]: any }\n\t{\n\t\treturn this.#getItemsArray().find(item => item.id === id);\n\t}\n\n\t#handleFileAdd(event: BaseEvent): void\n\t{\n\t\tconst { file } = event.getData();\n\t\tconst item = file.getState();\n\t\tthis.#getItemsArray().push(item);\n\n\t\tthis.emit('Item:onAdd', { item });\n\t}\n\n\t#handleFileRemove(event: BaseEvent): void\n\t{\n\t\tconst { file } = event.getData();\n\n\t\tconst position = this.#getItemsArray().findIndex(fileInfo => fileInfo.id === file.getId());\n\t\tif (position >= 0)\n\t\t{\n\t\t\tconst result = this.#getItemsArray().splice(position, 1);\n\t\t\tthis.emit('Item:onRemove', { item: result[0] });\n\t\t}\n\t}\n\n\t#handleFileStateChange(event: BaseEvent): void\n\t{\n\t\tconst { file } = event.getData();\n\t\tconst item = this.#getItem(file.getId());\n\t\tif (item)\n\t\t{\n\t\t\tObject.assign(item, file.getState());\n\t\t}\n\t}\n\n\t#handleError(event: BaseEvent): void\n\t{\n\t\tconst { error } = event.getData();\n\t\tthis.#uploaderError.value = error.toJSON();\n\n\t\tthis.emit('Uploader:onError', event);\n\t}\n\n\t#handleUploadStart(event: BaseEvent): void\n\t{\n\t\tthis.emit('Uploader:onUploadStart', event);\n\t}\n\n\t#handleUploadComplete(event: BaseEvent): void\n\t{\n\t\tthis.emit('Uploader:onUploadComplete', event);\n\t}\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\nimport type { UploaderOptions, Uploader } from 'ui.uploader.core';\nimport { BitrixVue, VueCreateAppResult } from 'ui.vue3';\n\nimport VueAdapter from './vue-adapter';\n\n/**\n * @memberof BX.UI.Uploader\n */\nexport default class VueUploaderWidget extends EventEmitter\n{\n\t#vueAdapter: VueAdapter = null;\n\t#uploaderOptions: UploaderOptions = null;\n\t#widgetOptions = {};\n\t#vueApp = null;\n\n\tconstructor(uploaderOptions: UploaderOptions, widgetOptions: {[key: string]: any} = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.Vue.Widget');\n\n\t\tthis.#uploaderOptions = uploaderOptions;\n\t\tthis.#widgetOptions = widgetOptions;\n\t}\n\n\tgetRootComponent(): ?Function\n\t{\n\t\treturn null;\n\t}\n\n\tgetAdapter(): VueAdapter\n\t{\n\t\tif (this.#vueAdapter === null)\n\t\t{\n\t\t\tthis.#vueAdapter = new VueAdapter(this.#uploaderOptions);\n\t\t}\n\n\t\treturn this.#vueAdapter;\n\t}\n\n\tgetUploader(): Uploader\n\t{\n\t\treturn this.getAdapter().getUploader();\n\t}\n\n\tgetVueApp(): VueCreateAppResult\n\t{\n\t\tif (this.#vueApp !== null)\n\t\t{\n\t\t\treturn this.#vueApp;\n\t\t}\n\n\t\tthis.#vueApp = BitrixVue.createApp(this.getRootComponent(), {\n\t\t\tuploaderOptions: this.#uploaderOptions,\n\t\t\twidgetOptions: this.#widgetOptions,\n\t\t\tuploaderAdapter: this.getAdapter(),\n\t\t});\n\n\t\treturn this.#vueApp;\n\t}\n\n\trenderTo(node: HTMLElement): void\n\t{\n\t\tif (Type.isDomNode(node))\n\t\t{\n\t\t\tthis.getVueApp().mount(node);\n\t\t}\n\t}\n}\n","import VueAdapter from './vue-adapter';\n\n/**\n * @memberof BX.UI.Uploader\n */\nexport const VueUploaderComponent = {\n\tname: 'VueUploaderComponent',\n\tprops: {\n\t\tuploaderOptions: {\n\t\t\ttype: Object\n\t\t},\n\t\twidgetOptions: {\n\t\t\ttype: Object,\n\t\t\tdefault: {},\n\t\t},\n\t\tuploaderAdapter: {\n\t\t\ttype: Object,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata: () => ({\n\t\titems: [],\n\t\tuploaderError: null,\n\t}),\n\tprovide() {\n\t\treturn {\n\t\t\tuploader: this.uploader,\n\t\t\tadapter: this.adapter,\n\t\t\twidgetOptions: this.widgetOptions,\n\t\t}\n\t},\n\tbeforeCreate()\n\t{\n\t\tthis.adapter = this.uploaderAdapter === null ? new VueAdapter(this.uploaderOptions) : this.uploaderAdapter;\n\t\tthis.uploader = this.adapter.getUploader();\n\t},\n\tcreated()\n\t{\n\t\tthis.items = this.adapter.getItems();\n\t\tthis.uploaderError = this.adapter.getUploaderError();\n\t},\n\tmounted()\n\t{\n\t\tif (!this.uploader.getHiddenFieldsContainer())\n\t\t{\n\t\t\tthis.uploader.setHiddenFieldsContainer(this.$el);\n\t\t}\n\t}\n}","const isImage = (file: File) => {\n\treturn /^image\\/[a-z0-9.-]+$/i.test(file.type);\n};\n\nexport default isImage;"],"names":["FileStatus","INIT","ADDED","LOADING","PENDING","UPLOADING","ABORTED","COMPLETE","LOAD_FAILED","UPLOAD_FAILED","FileOrigin","CLIENT","SERVER","AbstractUploadController","EventEmitter","constructor","server","setEventNamespace","getServer","upload","file","Error","abort","AbstractLoadController","load","crypto","window","msCrypto","createUniqueId","replace","c","getRandomValues","Uint8Array","toString","getExtensionFromType","type","Type","isStringFilled","subtype","split","pop","test","counter","createFileFromBlob","blob","fileName","date","Date","getFullYear","getMonth","getDate","extension","File","lastModified","now","lastModifiedDate","exception","slice","size","name","regexp","isDataUri","str","match","createBlobFromDataUri","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","length","view","i","charCodeAt","Blob","getFileExtension","filename","position","lastIndexOf","substring","imageExtensions","isResizableImage","mimeType","isFile","toLowerCase","includes","formatFileSize","base","units","getUnits","isInteger","toFixed","fileSizeUnits","Loc","getMessage","isArrayFilled","UploaderFile","source","fileOptions","id","serverId","originalName","width","height","clientPreview","clientPreviewUrl","clientPreviewWidth","clientPreviewHeight","serverPreviewUrl","serverPreviewWidth","serverPreviewHeight","downloadUrl","removeUrl","status","origin","errors","progress","uploadController","loadController","options","isPlainObject","isBlob","isNumber","setFile","subscribeFromOptions","events","canLoad","setStatus","emit","canUpload","event","BaseEvent","data","isDefaultPrevented","getFile","emitAsync","then","result","catch","error","console","abortLoad","cancel","setUploadController","controller","setLoadController","isReadyToUpload","getStatus","isUploadable","isLoadable","isUploading","isLoading","isComplete","isFailed","setName","setOriginalName","setType","setSize","setServerId","setWidth","setHeight","setClientPreview","setServerPreview","setDownloadUrl","setRemoveUrl","getName","getOriginalName","getExtension","getType","getSize","getSizeFormatted","getId","getServerId","getOrigin","getDownloadUrl","url","getRemoveUrl","getWidth","getHeight","getPreviewUrl","getClientPreview","getClientPreviewUrl","getServerPreviewUrl","getPreviewWidth","getClientPreviewWidth","getServerPreviewWidth","getPreviewHeight","getClientPreviewHeight","getServerPreviewHeight","isNull","revokeClientPreviewUrl","URL","createObjectURL","revokeObjectURL","isImage","getProgress","setProgress","addError","push","getError","getErrors","getState","JSON","parse","stringify","toJSON","sizeFormatted","failed","previewUrl","previewWidth","previewHeight","value","UploaderError","BaseError","code","args","message","isString","description","customData","replacements","Object","keys","forEach","key","hasMessage","setDescription","createFromAjaxErrors","uploaderError","find","system","setOrigin","getDescription","text","clone","getCode","getCustomData","Chunk","offset","retries","getNextRetryDelay","shift","setRetries","isArray","getData","getOffset","UploadController","chunkOffset","chunkTimeout","token","xhr","aborted","nextChunk","clearTimeout","getChunkSize","getChunkOffset","getToken","setToken","chunk","totalSize","isOnlyOneChunk","normalize","headers","encodeURIComponent","rangeStart","rangeEnd","rangeHeader","controllerOptions","getControllerOptions","Ajax","runAction","preparePost","getParameters","getController","onrequeststart","onprogressupload","lengthComputable","uploadedBytes","Math","min","loaded","floor","response","fileInfo","shouldRetry","nextDelay","setTimeout","currentChunkSize","nextOffset","fileRange","getChunkRetryDelays","queues","WeakMap","loadMultiple","queue","get","tasks","Runtime","debounce","loadInternal","set","delete","task","fileIds","onprogress","total","files","fileResults","fileResult","success","ServerLoadController","ClientLoadController","Server","serverOptions","uploadControllerClass","loadControllerClass","chunkSize","defaultChunkSize","chunkMinSize","chunkMaxSize","chunkRetryDelays","getDefaultChunkSize","forceChunkSize","controllerClass","getClass","isFunction","createUploadController","createLoadController","createClientLoadController","settings","Extension","getSettings","getChunkMinSize","getChunkMaxSize","max","Filter","uploader","filterOptions","getUploader","apply","FileSizeFilter","maxFileSize","minFileSize","maxTotalFileSize","imageMaxFileSize","imageMinFileSize","integerOptions","option","Promise","resolve","reject","maxFileSizeInBytes","minFileSizeInBytes","imageMaxFileSizeInBytes","imageMinFileSizeInBytes","getTotalSize","maxTotalFileSizeInBytes","isValidFileType","fileTypes","baseMimeType","trim","charAt","indexOf","FileTypeFilter","getAcceptedFileTypes","getArrayBuffer","fileReader","FileReader","readAsArrayBuffer","onload","onerror","convertStringToBuffer","compareBuffers","dataView","dest","start","j","getUint8","GIF87a","GIF89a","Gif","DataView","getUint16","PNG_SIGNATURE","IHDR_SIGNATURE","FRIED_CHUNK_NAME","Png","getUint32","BMP_SIGNATURE","Bmp","abs","getInt32","EXIF_SIGNATURE","Jpeg","orientation","byteLength","exifBlock","getOrientation","Marker","BIG_ENDIAN","LITTLE_ENDIAN","byteAlign","isBigEndian","isLittleEndian","extractOrientation","littleEndian","idfDirectoryEntries","IDF_ENTRY_BYTES","NUM_DIRECTORY_ENTRIES_BYTES","directoryEntryNumber","end","block","byteOffset","tagNumber","dataFormat","numberOfComponents","RIFF_HEADER","WEBP_SIGNATURE","VP8_SIGNATURE","VP8L_SIGNATURE","VP8X_SIGNATURE","Webp","headerType","headerView","bits","extendedHeader","validStart","validEnd","jpg","typeHandlers","gif","png","bmp","jpeg","jpe","webp","getImageSize","typeHandler","ImageSizeFilter","imageMinWidth","imageMinHeight","imageMaxWidth","imageMaxHeight","ignoreUnknownImageTypes","isBoolean","minWidth","minHeight","maxWidth","maxHeight","createWorker","fn","workerBlob","workerURL","worker","Worker","post","callback","transfer","onmessage","postMessage","terminate","BitmapWorker","self","createImageBitmap","bitmap","loadImage","image","document","createElement","src","naturalWidth","naturalHeight","createImagePreview","round","canvas","context","getContext","drawImage","getFilenameWithoutExtension","substr","extensionMap","renameFileToMatchMimeType","canvasPrototype","HTMLCanvasElement","prototype","hasToBlobSupport","toBlob","convertCanvasToBlob","quality","toDataURL","canCreateImageBitmap","ImageBitmap","close","resizeImage","loadImageDataFallback","handleImageLoad","imageData","targetWidth","targetHeight","calcTargetSize","preview","newFileName","bitmapWorker","imageBitmap","mode","upscale","ratioWidth","ratioHeight","ratio","ImagePreviewFilter","imagePreviewWidth","imagePreviewHeight","imagePreviewQuality","imagePreviewMimeType","imagePreviewUpscale","imagePreviewResizeMethod","TransformImageFilter","resizeWidth","resizeHeight","resizeMethod","resizeMimeType","resizeQuality","UploaderStatus","STARTED","STOPPED","FilterType","VALIDATION","PREPARATION","getFilesFromDataTransfer","dataTransfer","items","Array","from","filter","item","isFileSystemItem","map","getFilesFromItem","all","fileGroups","group","entry","webkitGetAsEntry","isDirectory","kind","isDirectoryEntry","getFilesInDirectory","getAsEntry","getAsFile","dirCounter","fileCounter","resolveIfDone","readEntries","dirEntry","directoryReader","createReader","readBatch","entries","isEntry","canAppendFileToForm","DataTransfer","add","input","setAttribute","err","assignFileToInput","Uploader","uploaderOptions","multiple","autoUpload","allowReplaceSingle","maxParallelUploads","maxParallelLoads","acceptOnlyImages","acceptedFileTypes","ignoredFileNames","maxFileCount","hiddenFields","Map","hiddenFieldsContainer","hiddenFieldName","assignAsFile","filters","assign","setAutoUpload","setMaxParallelUploads","setMaxParallelLoads","setAcceptedFileTypes","setIgnoredFileNames","setMaxFileCount","setAllowReplaceSingle","assignBrowse","browseElement","assignDropzone","dropElement","assignPaste","pasteElement","setHiddenFieldsContainer","setHiddenFieldName","setAssignAsFile","addFilter","addFilters","handleBeforeUpload","bind","handlePrepareFileAsync","handleUploadStart","handleFileCancel","handleFileStatusChange","handleFileStateChange","addFiles","fileList","isArrayLike","addFile","getIgnoredFileNames","isMultiple","shouldReplaceSingle","getFiles","fileToReplace","removeFile","subscribe","getPendingFileCount","stop","destroy","property","hasOwnProperty","setPrototypeOf","index","findIndex","element","splice","className","Reflection","nodes","isElementNode","node","tagName","acceptAttr","getAttribute","Event","click","join","preventDefault","clipboardData","getHiddenFieldsContainer","querySelector","container","getHiddenFieldName","shouldAssignAsFile","flag","reduce","shouldAutoUpload","getMaxParallelUploads","number","getMaxParallelLoads","getUploadingFileCount","shouldAcceptOnlyImages","fileNames","getMaxFileCount","transformedFile","getTarget","totalNewFiles","totalFiles","firstFilter","current","next","currentUploads","pendingFiles","pendingUploads","limit","pendingFile","currentLoads","has","isExistingServerFile","Dom","style","visibility","left","top","appendChild","remove","VueAdapter","ref","shallowRef","userEvents","getItems","getUploaderError","VueUploaderWidget","widgetOptions","getRootComponent","getAdapter","getVueApp","BitrixVue","createApp","uploaderAdapter","renderTo","isDomNode","mount","VueUploaderComponent","props","default","provide","adapter","beforeCreate","created","mounted","$el"],"mappings":"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"}