this.BX=this.BX||{};this.BX.Crm=this.BX.Crm||{};(function(e,r){"use strict";const s={SERVER_TO_UTC:r.Text.toInteger(r.Loc.getMessage("SERVER_TZ_OFFSET")),USER_TO_SERVER:r.Text.toInteger(r.Loc.getMessage("USER_TZ_OFFSET")),BROWSER_TO_UTC:-r.Text.toInteger((new Date).getTimezoneOffset()*60)};Object.freeze(s);var t=babelHelpers.classPrivateFieldLooseKey("browserToUtc");var a=babelHelpers.classPrivateFieldLooseKey("normalizeTimestampFromArgs");class o{static serverToUser(e){e=babelHelpers.classPrivateFieldLooseBase(this,a)[a](e);return e+s.USER_TO_SERVER}static userToServer(e){e=babelHelpers.classPrivateFieldLooseBase(this,a)[a](e);return e-s.USER_TO_SERVER}static browserToUser(e){e=babelHelpers.classPrivateFieldLooseBase(this,a)[a](e);return e+s.USER_TO_SERVER}static browserToServer(e){e=babelHelpers.classPrivateFieldLooseBase(this,a)[a](e);return babelHelpers.classPrivateFieldLooseBase(this,t)[t](e)+s.SERVER_TO_UTC}static userToBrowser(e){e=babelHelpers.classPrivateFieldLooseBase(this,a)[a](e);return e+s.BROWSER_TO_UTC-s.SERVER_TO_UTC-s.USER_TO_SERVER}static serverToBrowser(e){e=babelHelpers.classPrivateFieldLooseBase(this,a)[a](e);return e+s.BROWSER_TO_UTC-s.SERVER_TO_UTC}}function i(e){e=babelHelpers.classPrivateFieldLooseBase(this,a)[a](e);return e-s.BROWSER_TO_UTC}function l(e){const s=r.Text.toInteger(e);if(s<0){throw new Error("BX.Crm.DateTime.TimestampConverter: input timestamp could not be negative")}return s}Object.defineProperty(o,a,{value:l});Object.defineProperty(o,t,{value:i});var n=babelHelpers.classPrivateFieldLooseKey("getBrowserNowTimestamp");class T{static getUserNow(){const e=o.browserToUser(babelHelpers.classPrivateFieldLooseBase(this,n)[n]());return new Date(e*1e3)}static getServerNow(){const e=o.browserToServer(babelHelpers.classPrivateFieldLooseBase(this,n)[n]());return new Date(e*1e3)}static createFromTimestampInUserTimezone(e){const r=o.browserToUser(e);return new Date(r*1e3)}static createFromTimestampInServerTimezone(e){const r=o.browserToServer(e);return new Date(r*1e3)}}function c(){return Math.floor(Date.now()/1e3)}Object.defineProperty(T,n,{value:c});const b=r.Reflection.namespace("BX.Crm.DateTime");b.Factory=T;b.TimestampConverter=o;b.Dictionary={TimezoneOffset:s};e.Factory=T;e.TimestampConverter=o;e.TimezoneOffset=s})(this.BX.Crm.DateTime=this.BX.Crm.DateTime||{},BX);
//# sourceMappingURL=datetime.bundle.map.js